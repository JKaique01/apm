
Apm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009c  00800100  00001810  000018a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001810  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000200  0080019c  0080019c  00001940  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001940  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000199c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011e1  00000000  00000000  00001aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009cd  00000000  00000000  00002c8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3f  00000000  00000000  0000365a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000344  00000000  00000000  0000409c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a9  00000000  00000000  000043e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a0b  00000000  00000000  00004989  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00005394  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__ctors_end>
       4:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
       8:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_2>
       c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      10:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      14:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      18:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      1c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      20:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      24:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      28:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      2c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      30:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      34:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      38:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <__vector_14>
      3c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      40:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      44:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      48:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_18>
      4c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      50:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      54:	0c 94 76 01 	jmp	0x2ec	; 0x2ec <__vector_21>
      58:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      5c:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      60:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      64:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__bad_interrupt>
      68:	f4 02       	muls	r31, r20
      6a:	fd 02       	muls	r31, r29
      6c:	fd 02       	muls	r31, r29
      6e:	cc 02       	muls	r28, r28
      70:	e0 02       	muls	r30, r16
      72:	fd 02       	muls	r31, r29
      74:	fd 02       	muls	r31, r29
      76:	90 02       	muls	r25, r16
      78:	fd 02       	muls	r31, r29
      7a:	fd 02       	muls	r31, r29
      7c:	fd 02       	muls	r31, r29
      7e:	fd 02       	muls	r31, r29
      80:	a4 02       	muls	r26, r20
      82:	fd 02       	muls	r31, r29
      84:	fd 02       	muls	r31, r29
      86:	fd 02       	muls	r31, r29
      88:	fd 02       	muls	r31, r29
      8a:	fd 02       	muls	r31, r29
      8c:	b8 02       	muls	r27, r24
      8e:	fd 02       	muls	r31, r29
      90:	fd 02       	muls	r31, r29
      92:	fd 02       	muls	r31, r29
      94:	fd 02       	muls	r31, r29
      96:	fd 02       	muls	r31, r29
      98:	fd 02       	muls	r31, r29
      9a:	fd 02       	muls	r31, r29
      9c:	fd 02       	muls	r31, r29
      9e:	fd 02       	muls	r31, r29
      a0:	fd 02       	muls	r31, r29
      a2:	fd 02       	muls	r31, r29
      a4:	fd 02       	muls	r31, r29
      a6:	fd 02       	muls	r31, r29
      a8:	ea 02       	muls	r30, r26
      aa:	fd 02       	muls	r31, r29
      ac:	fd 02       	muls	r31, r29
      ae:	c2 02       	muls	r28, r18
      b0:	d6 02       	muls	r29, r22
      b2:	fd 02       	muls	r31, r29
      b4:	fd 02       	muls	r31, r29
      b6:	86 02       	muls	r24, r22
      b8:	fd 02       	muls	r31, r29
      ba:	fd 02       	muls	r31, r29
      bc:	fd 02       	muls	r31, r29
      be:	fd 02       	muls	r31, r29
      c0:	9a 02       	muls	r25, r26
      c2:	fd 02       	muls	r31, r29
      c4:	fd 02       	muls	r31, r29
      c6:	fd 02       	muls	r31, r29
      c8:	fd 02       	muls	r31, r29
      ca:	fd 02       	muls	r31, r29
      cc:	ae 02       	muls	r26, r30

000000ce <CHARSET>:
      ce:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      de:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ee:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      fe:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     10e:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     11e:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     12e:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     13e:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     14e:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     15e:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     16e:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     17e:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     18e:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     19e:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1ae:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1be:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ce:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1de:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1ee:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1fe:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     20e:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     21e:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     22e:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     23e:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     24e:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     25e:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     26e:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     27e:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     28e:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     29e:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

000002ae <__ctors_end>:
     2ae:	11 24       	eor	r1, r1
     2b0:	1f be       	out	0x3f, r1	; 63
     2b2:	cf ef       	ldi	r28, 0xFF	; 255
     2b4:	d8 e0       	ldi	r29, 0x08	; 8
     2b6:	de bf       	out	0x3e, r29	; 62
     2b8:	cd bf       	out	0x3d, r28	; 61

000002ba <__do_copy_data>:
     2ba:	11 e0       	ldi	r17, 0x01	; 1
     2bc:	a0 e0       	ldi	r26, 0x00	; 0
     2be:	b1 e0       	ldi	r27, 0x01	; 1
     2c0:	e0 e1       	ldi	r30, 0x10	; 16
     2c2:	f8 e1       	ldi	r31, 0x18	; 24
     2c4:	02 c0       	rjmp	.+4      	; 0x2ca <__do_copy_data+0x10>
     2c6:	05 90       	lpm	r0, Z+
     2c8:	0d 92       	st	X+, r0
     2ca:	ac 39       	cpi	r26, 0x9C	; 156
     2cc:	b1 07       	cpc	r27, r17
     2ce:	d9 f7       	brne	.-10     	; 0x2c6 <__do_copy_data+0xc>

000002d0 <__do_clear_bss>:
     2d0:	23 e0       	ldi	r18, 0x03	; 3
     2d2:	ac e9       	ldi	r26, 0x9C	; 156
     2d4:	b1 e0       	ldi	r27, 0x01	; 1
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <.do_clear_bss_start>

000002d8 <.do_clear_bss_loop>:
     2d8:	1d 92       	st	X+, r1

000002da <.do_clear_bss_start>:
     2da:	ac 39       	cpi	r26, 0x9C	; 156
     2dc:	b2 07       	cpc	r27, r18
     2de:	e1 f7       	brne	.-8      	; 0x2d8 <.do_clear_bss_loop>
     2e0:	0e 94 89 05 	call	0xb12	; 0xb12 <main>
     2e4:	0c 94 06 0c 	jmp	0x180c	; 0x180c <_exit>

000002e8 <__bad_interrupt>:
     2e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002ec <__vector_21>:
// ||Função para recepção de um frame de 5 a 8bits||
unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Lê o dado recebido e retorna
}
     2ec:	1f 92       	push	r1
     2ee:	0f 92       	push	r0
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	0f 92       	push	r0
     2f4:	11 24       	eor	r1, r1
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	2f 93       	push	r18
     300:	3f 93       	push	r19
     302:	4f 93       	push	r20
     304:	5f 93       	push	r21
     306:	6f 93       	push	r22
     308:	7f 93       	push	r23
     30a:	8f 93       	push	r24
     30c:	9f 93       	push	r25
     30e:	af 93       	push	r26
     310:	bf 93       	push	r27
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	ef 93       	push	r30
     318:	ff 93       	push	r31
     31a:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     31e:	d0 91 79 00 	lds	r29, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     322:	d0 93 9d 01 	sts	0x019D, r29	; 0x80019d <__data_end+0x1>
     326:	c0 93 9c 01 	sts	0x019C, r28	; 0x80019c <__data_end>
     32a:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     32e:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     332:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     336:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e8       	ldi	r20, 0x80	; 128
     340:	5f e3       	ldi	r21, 0x3F	; 63
     342:	c7 01       	movw	r24, r14
     344:	b6 01       	movw	r22, r12
     346:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     34a:	88 23       	and	r24, r24
     34c:	0c f0       	brlt	.+2      	; 0x350 <__vector_21+0x64>
     34e:	63 c0       	rjmp	.+198    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     350:	be 01       	movw	r22, r28
     352:	dd 0f       	add	r29, r29
     354:	88 0b       	sbc	r24, r24
     356:	99 0b       	sbc	r25, r25
     358:	0e 94 55 08 	call	0x10aa	; 0x10aa <__floatsisf>
     35c:	6b 01       	movw	r12, r22
     35e:	7c 01       	movw	r14, r24
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	30 ec       	ldi	r19, 0xC0	; 192
     364:	4f e7       	ldi	r20, 0x7F	; 127
     366:	53 e4       	ldi	r21, 0x43	; 67
     368:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     36c:	88 23       	and	r24, r24
     36e:	6c f4       	brge	.+26     	; 0x38a <__vector_21+0x9e>
     370:	8d ec       	ldi	r24, 0xCD	; 205
     372:	9c ec       	ldi	r25, 0xCC	; 204
     374:	ac ec       	ldi	r26, 0xCC	; 204
     376:	bd e3       	ldi	r27, 0x3D	; 61
     378:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     37c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     380:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     384:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     388:	83 c0       	rjmp	.+262    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 ec       	ldi	r19, 0xC0	; 192
     38e:	4f ef       	ldi	r20, 0xFF	; 255
     390:	53 e4       	ldi	r21, 0x43	; 67
     392:	c7 01       	movw	r24, r14
     394:	b6 01       	movw	r22, r12
     396:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     39a:	88 23       	and	r24, r24
     39c:	6c f4       	brge	.+26     	; 0x3b8 <__vector_21+0xcc>
     39e:	8d ec       	ldi	r24, 0xCD	; 205
     3a0:	9c ec       	ldi	r25, 0xCC	; 204
     3a2:	ac e4       	ldi	r26, 0x4C	; 76
     3a4:	be e3       	ldi	r27, 0x3E	; 62
     3a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     3aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     3ae:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     3b2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     3b6:	6c c0       	rjmp	.+216    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 ed       	ldi	r19, 0xD0	; 208
     3bc:	4f e3       	ldi	r20, 0x3F	; 63
     3be:	54 e4       	ldi	r21, 0x44	; 68
     3c0:	c7 01       	movw	r24, r14
     3c2:	b6 01       	movw	r22, r12
     3c4:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     3c8:	88 23       	and	r24, r24
     3ca:	6c f4       	brge	.+26     	; 0x3e6 <__vector_21+0xfa>
     3cc:	8a e9       	ldi	r24, 0x9A	; 154
     3ce:	99 e9       	ldi	r25, 0x99	; 153
     3d0:	a9 e9       	ldi	r26, 0x99	; 153
     3d2:	be e3       	ldi	r27, 0x3E	; 62
     3d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     3d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     3dc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     3e0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     3e4:	55 c0       	rjmp	.+170    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 ec       	ldi	r19, 0xC0	; 192
     3ea:	4f e7       	ldi	r20, 0x7F	; 127
     3ec:	54 e4       	ldi	r21, 0x44	; 68
     3ee:	c7 01       	movw	r24, r14
     3f0:	b6 01       	movw	r22, r12
     3f2:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     3f6:	88 23       	and	r24, r24
     3f8:	0c f0       	brlt	.+2      	; 0x3fc <__vector_21+0x110>
     3fa:	4a c0       	rjmp	.+148    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     3fc:	8d ec       	ldi	r24, 0xCD	; 205
     3fe:	9c ec       	ldi	r25, 0xCC	; 204
     400:	ac ec       	ldi	r26, 0xCC	; 204
     402:	be e3       	ldi	r27, 0x3E	; 62
     404:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     408:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     40c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     410:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     414:	3d c0       	rjmp	.+122    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	40 e0       	ldi	r20, 0x00	; 0
     41c:	50 e4       	ldi	r21, 0x40	; 64
     41e:	c7 01       	movw	r24, r14
     420:	b6 01       	movw	r22, r12
     422:	0e 94 05 09 	call	0x120a	; 0x120a <__gesf2>
     426:	18 16       	cp	r1, r24
     428:	9c f5       	brge	.+102    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     42a:	be 01       	movw	r22, r28
     42c:	dd 0f       	add	r29, r29
     42e:	88 0b       	sbc	r24, r24
     430:	99 0b       	sbc	r25, r25
     432:	0e 94 55 08 	call	0x10aa	; 0x10aa <__floatsisf>
     436:	6b 01       	movw	r12, r22
     438:	7c 01       	movw	r14, r24
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	30 ec       	ldi	r19, 0xC0	; 192
     43e:	4f ef       	ldi	r20, 0xFF	; 255
     440:	53 e4       	ldi	r21, 0x43	; 67
     442:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     446:	88 23       	and	r24, r24
     448:	6c f4       	brge	.+26     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	a0 e4       	ldi	r26, 0x40	; 64
     450:	b0 e4       	ldi	r27, 0x40	; 64
     452:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     456:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     45a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     45e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     462:	16 c0       	rjmp	.+44     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 ec       	ldi	r19, 0xC0	; 192
     468:	4f e7       	ldi	r20, 0x7F	; 127
     46a:	54 e4       	ldi	r21, 0x44	; 68
     46c:	c7 01       	movw	r24, r14
     46e:	b6 01       	movw	r22, r12
     470:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     474:	88 23       	and	r24, r24
     476:	64 f4       	brge	.+24     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     478:	86 e6       	ldi	r24, 0x66	; 102
     47a:	96 e6       	ldi	r25, 0x66	; 102
     47c:	a6 e4       	ldi	r26, 0x46	; 70
     47e:	b0 e4       	ldi	r27, 0x40	; 64
     480:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     484:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     488:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     48c:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     490:	ff 91       	pop	r31
     492:	ef 91       	pop	r30
     494:	df 91       	pop	r29
     496:	cf 91       	pop	r28
     498:	bf 91       	pop	r27
     49a:	af 91       	pop	r26
     49c:	9f 91       	pop	r25
     49e:	8f 91       	pop	r24
     4a0:	7f 91       	pop	r23
     4a2:	6f 91       	pop	r22
     4a4:	5f 91       	pop	r21
     4a6:	4f 91       	pop	r20
     4a8:	3f 91       	pop	r19
     4aa:	2f 91       	pop	r18
     4ac:	ff 90       	pop	r15
     4ae:	ef 90       	pop	r14
     4b0:	df 90       	pop	r13
     4b2:	cf 90       	pop	r12
     4b4:	0f 90       	pop	r0
     4b6:	0f be       	out	0x3f, r0	; 63
     4b8:	0f 90       	pop	r0
     4ba:	1f 90       	pop	r1
     4bc:	18 95       	reti

000004be <USART_Init>:
     4be:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     4c2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     4c6:	88 e9       	ldi	r24, 0x98	; 152
     4c8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     4cc:	8e e0       	ldi	r24, 0x0E	; 14
     4ce:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     4d2:	8f ef       	ldi	r24, 0xFF	; 255
     4d4:	87 b9       	out	0x07, r24	; 7
     4d6:	08 95       	ret

000004d8 <__vector_18>:

//USART configura hora e data
ISR(USART_RX_vect)
{
     4d8:	1f 92       	push	r1
     4da:	0f 92       	push	r0
     4dc:	0f b6       	in	r0, 0x3f	; 63
     4de:	0f 92       	push	r0
     4e0:	11 24       	eor	r1, r1
     4e2:	8f 93       	push	r24
     4e4:	9f 93       	push	r25
     4e6:	af 93       	push	r26
     4e8:	bf 93       	push	r27
     4ea:	ef 93       	push	r30
     4ec:	ff 93       	push	r31
	char recebido;
	recebido = UDR0;
     4ee:	e0 91 c6 00 	lds	r30, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	

	switch(recebido){
     4f2:	8e 2f       	mov	r24, r30
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	fc 01       	movw	r30, r24
     4f8:	e1 54       	subi	r30, 0x41	; 65
     4fa:	f1 09       	sbc	r31, r1
     4fc:	e3 33       	cpi	r30, 0x33	; 51
     4fe:	f1 05       	cpc	r31, r1
     500:	08 f0       	brcs	.+2      	; 0x504 <__vector_18+0x2c>
     502:	7b c0       	rjmp	.+246    	; 0x5fa <__vector_18+0x122>
     504:	ec 5c       	subi	r30, 0xCC	; 204
     506:	ff 4f       	sbci	r31, 0xFF	; 255
     508:	0c 94 16 09 	jmp	0x122c	; 0x122c <__tablejump2__>
		case 'h':
		date_hora-=1;
     50c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <date_hora>
     510:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <date_hora+0x1>
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <date_hora+0x1>
     51a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <date_hora>
		break;
     51e:	6d c0       	rjmp	.+218    	; 0x5fa <__vector_18+0x122>
		case 'H':
		date_hora+=1;
     520:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <date_hora>
     524:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <date_hora+0x1>
     528:	01 96       	adiw	r24, 0x01	; 1
     52a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <date_hora+0x1>
     52e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <date_hora>
		break;
     532:	63 c0       	rjmp	.+198    	; 0x5fa <__vector_18+0x122>
		case 'm':
		date_minuto-=1;
     534:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <date_minuto>
     538:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <date_minuto+0x1>
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <date_minuto+0x1>
     542:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <date_minuto>
		break;
     546:	59 c0       	rjmp	.+178    	; 0x5fa <__vector_18+0x122>
		case 'M':
		date_minuto+=1;
     548:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <date_minuto>
     54c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <date_minuto+0x1>
     550:	01 96       	adiw	r24, 0x01	; 1
     552:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <date_minuto+0x1>
     556:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <date_minuto>
		break;
     55a:	4f c0       	rjmp	.+158    	; 0x5fa <__vector_18+0x122>
		case 's':
		date_segundo-=1;
     55c:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <date_segundo>
     560:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <date_segundo+0x1>
     564:	01 97       	sbiw	r24, 0x01	; 1
     566:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <date_segundo+0x1>
     56a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <date_segundo>
		break;
     56e:	45 c0       	rjmp	.+138    	; 0x5fa <__vector_18+0x122>
		case 'S':
		date_segundo+=1;
     570:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <date_segundo>
     574:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <date_segundo+0x1>
     578:	01 96       	adiw	r24, 0x01	; 1
     57a:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <date_segundo+0x1>
     57e:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <date_segundo>
		break;
     582:	3b c0       	rjmp	.+118    	; 0x5fa <__vector_18+0x122>
		case 'd':
		date_dia-=1;
     584:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <date_dia>
     588:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <date_dia+0x1>
     58c:	01 97       	sbiw	r24, 0x01	; 1
     58e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <date_dia+0x1>
     592:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <date_dia>
		break;
     596:	31 c0       	rjmp	.+98     	; 0x5fa <__vector_18+0x122>
		case 'D':
		date_dia+=1;
     598:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <date_dia>
     59c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <date_dia+0x1>
     5a0:	01 96       	adiw	r24, 0x01	; 1
     5a2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <date_dia+0x1>
     5a6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <date_dia>
		break;
     5aa:	27 c0       	rjmp	.+78     	; 0x5fa <__vector_18+0x122>
		case 'e':
		date_mes-=1;
     5ac:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <date_mes>
     5b0:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <date_mes+0x1>
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <date_mes+0x1>
     5ba:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <date_mes>
		break;
     5be:	1d c0       	rjmp	.+58     	; 0x5fa <__vector_18+0x122>
		case 'E':
		date_mes+=1;
     5c0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <date_mes>
     5c4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <date_mes+0x1>
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <date_mes+0x1>
     5ce:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <date_mes>
		break;
     5d2:	13 c0       	rjmp	.+38     	; 0x5fa <__vector_18+0x122>
		case 'a':
		date_ano-=1;
     5d4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <date_ano>
     5d8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <date_ano+0x1>
     5dc:	01 97       	sbiw	r24, 0x01	; 1
     5de:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <date_ano+0x1>
     5e2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <date_ano>
		break;
     5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__vector_18+0x122>
		case 'A':
		date_ano+=1;
     5e8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <date_ano>
     5ec:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <date_ano+0x1>
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <date_ano+0x1>
     5f6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <date_ano>
		break;
	}
	
	
	
}
     5fa:	ff 91       	pop	r31
     5fc:	ef 91       	pop	r30
     5fe:	bf 91       	pop	r27
     600:	af 91       	pop	r26
     602:	9f 91       	pop	r25
     604:	8f 91       	pop	r24
     606:	0f 90       	pop	r0
     608:	0f be       	out	0x3f, r0	; 63
     60a:	0f 90       	pop	r0
     60c:	1f 90       	pop	r1
     60e:	18 95       	reti

00000610 <atualiza_display>:

//Função principal de exibição.
void atualiza_display(){
     610:	cf 92       	push	r12
     612:	df 92       	push	r13
     614:	ef 92       	push	r14
     616:	ff 92       	push	r15
     618:	0f 93       	push	r16
     61a:	1f 93       	push	r17
     61c:	cf 93       	push	r28
     61e:	df 93       	push	r29
     620:	cd b7       	in	r28, 0x3d	; 61
     622:	de b7       	in	r29, 0x3e	; 62
     624:	2c 97       	sbiw	r28, 0x0c	; 12
     626:	0f b6       	in	r0, 0x3f	; 63
     628:	f8 94       	cli
     62a:	de bf       	out	0x3e, r29	; 62
     62c:	0f be       	out	0x3f, r0	; 63
     62e:	cd bf       	out	0x3d, r28	; 61
	nokia_lcd_clear(); //Limpa o LCD
     630:	0e 94 1b 06 	call	0xc36	; 0xc36 <nokia_lcd_clear>
	
	if (menu < 1){
     634:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     638:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     63c:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     640:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	40 e8       	ldi	r20, 0x80	; 128
     64a:	5f e3       	ldi	r21, 0x3F	; 63
     64c:	c7 01       	movw	r24, r14
     64e:	b6 01       	movw	r22, r12
     650:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     654:	88 23       	and	r24, r24
     656:	0c f0       	brlt	.+2      	; 0x65a <atualiza_display+0x4a>
     658:	50 c0       	rjmp	.+160    	; 0x6fa <atualiza_display+0xea>
		if (menu == 0.1){
     65a:	2d ec       	ldi	r18, 0xCD	; 205
     65c:	3c ec       	ldi	r19, 0xCC	; 204
     65e:	4c ec       	ldi	r20, 0xCC	; 204
     660:	5d e3       	ldi	r21, 0x3D	; 61
     662:	c7 01       	movw	r24, r14
     664:	b6 01       	movw	r22, r12
     666:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     66a:	81 11       	cpse	r24, r1
     66c:	0a c0       	rjmp	.+20     	; 0x682 <atualiza_display+0x72>
			nokia_lcd_set_cursor(4, 6);
     66e:	66 e0       	ldi	r22, 0x06	; 6
     670:	84 e0       	ldi	r24, 0x04	; 4
     672:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Apm", 5);
     676:	65 e0       	ldi	r22, 0x05	; 5
     678:	8e e0       	ldi	r24, 0x0E	; 14
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     680:	e7 c0       	rjmp	.+462    	; 0x850 <atualiza_display+0x240>
		}
		else if (menu == 0.2){
     682:	2d ec       	ldi	r18, 0xCD	; 205
     684:	3c ec       	ldi	r19, 0xCC	; 204
     686:	4c e4       	ldi	r20, 0x4C	; 76
     688:	5e e3       	ldi	r21, 0x3E	; 62
     68a:	c7 01       	movw	r24, r14
     68c:	b6 01       	movw	r22, r12
     68e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     692:	81 11       	cpse	r24, r1
     694:	0a c0       	rjmp	.+20     	; 0x6aa <atualiza_display+0x9a>
			nokia_lcd_set_cursor(3, 10);
     696:	6a e0       	ldi	r22, 0x0A	; 10
     698:	83 e0       	ldi	r24, 0x03	; 3
     69a:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Horloge", 2);
     69e:	62 e0       	ldi	r22, 0x02	; 2
     6a0:	82 e1       	ldi	r24, 0x12	; 18
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     6a8:	d3 c0       	rjmp	.+422    	; 0x850 <atualiza_display+0x240>
		}
		else if (menu == 0.3){
     6aa:	2a e9       	ldi	r18, 0x9A	; 154
     6ac:	39 e9       	ldi	r19, 0x99	; 153
     6ae:	49 e9       	ldi	r20, 0x99	; 153
     6b0:	5e e3       	ldi	r21, 0x3E	; 62
     6b2:	c7 01       	movw	r24, r14
     6b4:	b6 01       	movw	r22, r12
     6b6:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     6ba:	81 11       	cpse	r24, r1
     6bc:	0a c0       	rjmp	.+20     	; 0x6d2 <atualiza_display+0xc2>
			nokia_lcd_set_cursor(13, 10);
     6be:	6a e0       	ldi	r22, 0x0A	; 10
     6c0:	8d e0       	ldi	r24, 0x0D	; 13
     6c2:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Calendrier", 1);
     6c6:	61 e0       	ldi	r22, 0x01	; 1
     6c8:	8a e1       	ldi	r24, 0x1A	; 26
     6ca:	91 e0       	ldi	r25, 0x01	; 1
     6cc:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     6d0:	bf c0       	rjmp	.+382    	; 0x850 <atualiza_display+0x240>
		}
		else if (menu == 0.4){
     6d2:	2d ec       	ldi	r18, 0xCD	; 205
     6d4:	3c ec       	ldi	r19, 0xCC	; 204
     6d6:	4c ec       	ldi	r20, 0xCC	; 204
     6d8:	5e e3       	ldi	r21, 0x3E	; 62
     6da:	c7 01       	movw	r24, r14
     6dc:	b6 01       	movw	r22, r12
     6de:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     6e2:	81 11       	cpse	r24, r1
     6e4:	b5 c0       	rjmp	.+362    	; 0x850 <atualiza_display+0x240>
			nokia_lcd_set_cursor(2, 10);
     6e6:	6a e0       	ldi	r22, 0x0A	; 10
     6e8:	82 e0       	ldi	r24, 0x02	; 2
     6ea:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Texte", 3);
     6ee:	63 e0       	ldi	r22, 0x03	; 3
     6f0:	85 e2       	ldi	r24, 0x25	; 37
     6f2:	91 e0       	ldi	r25, 0x01	; 1
     6f4:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     6f8:	ab c0       	rjmp	.+342    	; 0x850 <atualiza_display+0x240>
		}
	}
	
	else if (menu == 1){
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e8       	ldi	r20, 0x80	; 128
     700:	5f e3       	ldi	r21, 0x3F	; 63
     702:	c7 01       	movw	r24, r14
     704:	b6 01       	movw	r22, r12
     706:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     70a:	81 11       	cpse	r24, r1
     70c:	34 c0       	rjmp	.+104    	; 0x776 <atualiza_display+0x166>
		//Exibir relógio
		nokia_lcd_set_cursor(20, 0);
     70e:	60 e0       	ldi	r22, 0x00	; 0
     710:	84 e1       	ldi	r24, 0x14	; 20
     712:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Horaire: ", 1);
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	8b e2       	ldi	r24, 0x2B	; 43
     71a:	91 e0       	ldi	r25, 0x01	; 1
     71c:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
		char horloge[8];
		
		
		sprintf(horloge, "%02i:%02i:%02i", date_hora, date_minuto, date_segundo);
     720:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <date_segundo+0x1>
     724:	8f 93       	push	r24
     726:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <date_segundo>
     72a:	8f 93       	push	r24
     72c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <date_minuto+0x1>
     730:	8f 93       	push	r24
     732:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <date_minuto>
     736:	8f 93       	push	r24
     738:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <date_hora+0x1>
     73c:	8f 93       	push	r24
     73e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <date_hora>
     742:	8f 93       	push	r24
     744:	85 e3       	ldi	r24, 0x35	; 53
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	9f 93       	push	r25
     74a:	8f 93       	push	r24
     74c:	8e 01       	movw	r16, r28
     74e:	0f 5f       	subi	r16, 0xFF	; 255
     750:	1f 4f       	sbci	r17, 0xFF	; 255
     752:	1f 93       	push	r17
     754:	0f 93       	push	r16
     756:	0e 94 1c 09 	call	0x1238	; 0x1238 <sprintf>
		nokia_lcd_set_cursor(20, 25);
     75a:	69 e1       	ldi	r22, 0x19	; 25
     75c:	84 e1       	ldi	r24, 0x14	; 20
     75e:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(horloge, 1);
     762:	61 e0       	ldi	r22, 0x01	; 1
     764:	c8 01       	movw	r24, r16
     766:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	f8 94       	cli
     76e:	de bf       	out	0x3e, r29	; 62
     770:	0f be       	out	0x3f, r0	; 63
     772:	cd bf       	out	0x3d, r28	; 61
     774:	6d c0       	rjmp	.+218    	; 0x850 <atualiza_display+0x240>
		
		
		
	}
	else if(menu == 2){
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e0       	ldi	r20, 0x00	; 0
     77c:	50 e4       	ldi	r21, 0x40	; 64
     77e:	c7 01       	movw	r24, r14
     780:	b6 01       	movw	r22, r12
     782:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     786:	81 11       	cpse	r24, r1
     788:	34 c0       	rjmp	.+104    	; 0x7f2 <atualiza_display+0x1e2>
		//Exibir calendário
		nokia_lcd_set_cursor(30, 0);
     78a:	60 e0       	ldi	r22, 0x00	; 0
     78c:	8e e1       	ldi	r24, 0x1E	; 30
     78e:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Date: ", 1);
     792:	61 e0       	ldi	r22, 0x01	; 1
     794:	84 e4       	ldi	r24, 0x44	; 68
     796:	91 e0       	ldi	r25, 0x01	; 1
     798:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
		char data[12];
		sprintf(data, "%02i/%02i/%04i", date_dia, date_mes, date_ano);
     79c:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <date_ano+0x1>
     7a0:	8f 93       	push	r24
     7a2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <date_ano>
     7a6:	8f 93       	push	r24
     7a8:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <date_mes+0x1>
     7ac:	8f 93       	push	r24
     7ae:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <date_mes>
     7b2:	8f 93       	push	r24
     7b4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <date_dia+0x1>
     7b8:	8f 93       	push	r24
     7ba:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <date_dia>
     7be:	8f 93       	push	r24
     7c0:	8b e4       	ldi	r24, 0x4B	; 75
     7c2:	91 e0       	ldi	r25, 0x01	; 1
     7c4:	9f 93       	push	r25
     7c6:	8f 93       	push	r24
     7c8:	8e 01       	movw	r16, r28
     7ca:	0f 5f       	subi	r16, 0xFF	; 255
     7cc:	1f 4f       	sbci	r17, 0xFF	; 255
     7ce:	1f 93       	push	r17
     7d0:	0f 93       	push	r16
     7d2:	0e 94 1c 09 	call	0x1238	; 0x1238 <sprintf>
		nokia_lcd_set_cursor(10, 30);
     7d6:	6e e1       	ldi	r22, 0x1E	; 30
     7d8:	8a e0       	ldi	r24, 0x0A	; 10
     7da:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(data, 1);
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	c8 01       	movw	r24, r16
     7e2:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     7e6:	0f b6       	in	r0, 0x3f	; 63
     7e8:	f8 94       	cli
     7ea:	de bf       	out	0x3e, r29	; 62
     7ec:	0f be       	out	0x3f, r0	; 63
     7ee:	cd bf       	out	0x3d, r28	; 61
     7f0:	2f c0       	rjmp	.+94     	; 0x850 <atualiza_display+0x240>
		
	}
	else if(menu > 2){
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	40 e0       	ldi	r20, 0x00	; 0
     7f8:	50 e4       	ldi	r21, 0x40	; 64
     7fa:	c7 01       	movw	r24, r14
     7fc:	b6 01       	movw	r22, r12
     7fe:	0e 94 05 09 	call	0x120a	; 0x120a <__gesf2>
     802:	18 16       	cp	r1, r24
     804:	2c f5       	brge	.+74     	; 0x850 <atualiza_display+0x240>

		if (menu==3.0){
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 e4       	ldi	r20, 0x40	; 64
     80c:	50 e4       	ldi	r21, 0x40	; 64
     80e:	c7 01       	movw	r24, r14
     810:	b6 01       	movw	r22, r12
     812:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     816:	81 11       	cpse	r24, r1
     818:	09 c0       	rjmp	.+18     	; 0x82c <atualiza_display+0x21c>
			nokia_lcd_set_cursor(0, 10);
     81a:	6a e0       	ldi	r22, 0x0A	; 10
     81c:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Alimentar gatos antes de dormir", 1);
     820:	61 e0       	ldi	r22, 0x01	; 1
     822:	8a e5       	ldi	r24, 0x5A	; 90
     824:	91 e0       	ldi	r25, 0x01	; 1
     826:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
     82a:	12 c0       	rjmp	.+36     	; 0x850 <atualiza_display+0x240>
		}
		else if (menu == 3.1){
     82c:	26 e6       	ldi	r18, 0x66	; 102
     82e:	36 e6       	ldi	r19, 0x66	; 102
     830:	46 e4       	ldi	r20, 0x46	; 70
     832:	50 e4       	ldi	r21, 0x40	; 64
     834:	c7 01       	movw	r24, r14
     836:	b6 01       	movw	r22, r12
     838:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     83c:	81 11       	cpse	r24, r1
     83e:	08 c0       	rjmp	.+16     	; 0x850 <atualiza_display+0x240>
			nokia_lcd_set_cursor(0, 10);
     840:	6a e0       	ldi	r22, 0x0A	; 10
     842:	0e 94 1a 07 	call	0xe34	; 0xe34 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Continuar leitura sobre robotica", 1);
     846:	61 e0       	ldi	r22, 0x01	; 1
     848:	8a e7       	ldi	r24, 0x7A	; 122
     84a:	91 e0       	ldi	r25, 0x01	; 1
     84c:	0e 94 07 07 	call	0xe0e	; 0xe0e <nokia_lcd_write_string>
		
		
	}
	
	
	nokia_lcd_render();
     850:	0e 94 1f 07 	call	0xe3e	; 0xe3e <nokia_lcd_render>
}
     854:	2c 96       	adiw	r28, 0x0c	; 12
     856:	0f b6       	in	r0, 0x3f	; 63
     858:	f8 94       	cli
     85a:	de bf       	out	0x3e, r29	; 62
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	cd bf       	out	0x3d, r28	; 61
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	0f 91       	pop	r16
     868:	ff 90       	pop	r15
     86a:	ef 90       	pop	r14
     86c:	df 90       	pop	r13
     86e:	cf 90       	pop	r12
     870:	08 95       	ret

00000872 <__vector_2>:



//Botão OK
//Interrupção
ISR(INT1_vect){
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	0f 92       	push	r0
     87a:	11 24       	eor	r1, r1
     87c:	cf 92       	push	r12
     87e:	df 92       	push	r13
     880:	ef 92       	push	r14
     882:	ff 92       	push	r15
     884:	2f 93       	push	r18
     886:	3f 93       	push	r19
     888:	4f 93       	push	r20
     88a:	5f 93       	push	r21
     88c:	6f 93       	push	r22
     88e:	7f 93       	push	r23
     890:	8f 93       	push	r24
     892:	9f 93       	push	r25
     894:	af 93       	push	r26
     896:	bf 93       	push	r27
     898:	ef 93       	push	r30
     89a:	ff 93       	push	r31
	
	if (menu >=1 ){
     89c:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     8a0:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     8a4:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     8a8:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	40 e8       	ldi	r20, 0x80	; 128
     8b2:	5f e3       	ldi	r21, 0x3F	; 63
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 05 09 	call	0x120a	; 0x120a <__gesf2>
     8bc:	88 23       	and	r24, r24
     8be:	f4 f0       	brlt	.+60     	; 0x8fc <__vector_2+0x8a>
		menu = ((int)(menu/10))+0.1;
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	40 e2       	ldi	r20, 0x20	; 32
     8c6:	51 e4       	ldi	r21, 0x41	; 65
     8c8:	c7 01       	movw	r24, r14
     8ca:	b6 01       	movw	r22, r12
     8cc:	0e 94 ab 07 	call	0xf56	; 0xf56 <__divsf3>
     8d0:	0e 94 1d 08 	call	0x103a	; 0x103a <__fixsfsi>
     8d4:	07 2e       	mov	r0, r23
     8d6:	00 0c       	add	r0, r0
     8d8:	88 0b       	sbc	r24, r24
     8da:	99 0b       	sbc	r25, r25
     8dc:	0e 94 55 08 	call	0x10aa	; 0x10aa <__floatsisf>
     8e0:	2d ec       	ldi	r18, 0xCD	; 205
     8e2:	3c ec       	ldi	r19, 0xCC	; 204
     8e4:	4c ec       	ldi	r20, 0xCC	; 204
     8e6:	5d e3       	ldi	r21, 0x3D	; 61
     8e8:	0e 94 3a 07 	call	0xe74	; 0xe74 <__addsf3>
     8ec:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     8f0:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     8f4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
     8f8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	}
	
	if (menu < 1){
     8fc:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     900:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     904:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     908:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	40 e8       	ldi	r20, 0x80	; 128
     912:	5f e3       	ldi	r21, 0x3F	; 63
     914:	c7 01       	movw	r24, r14
     916:	b6 01       	movw	r22, r12
     918:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     91c:	88 23       	and	r24, r24
     91e:	0c f0       	brlt	.+2      	; 0x922 <__stack+0x23>
     920:	4a c0       	rjmp	.+148    	; 0x9b6 <__stack+0xb7>
		//Menu 0
		//Apm
		
		if (menu == 0.2){
     922:	2d ec       	ldi	r18, 0xCD	; 205
     924:	3c ec       	ldi	r19, 0xCC	; 204
     926:	4c e4       	ldi	r20, 0x4C	; 76
     928:	5e e3       	ldi	r21, 0x3E	; 62
     92a:	c7 01       	movw	r24, r14
     92c:	b6 01       	movw	r22, r12
     92e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     932:	81 11       	cpse	r24, r1
     934:	0d c0       	rjmp	.+26     	; 0x950 <__stack+0x51>
			menu = 1;
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	a0 e8       	ldi	r26, 0x80	; 128
     93c:	bf e3       	ldi	r27, 0x3F	; 63
     93e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     942:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     946:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     94a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     94e:	33 c0       	rjmp	.+102    	; 0x9b6 <__stack+0xb7>
		}
		if (menu == 0.3){
     950:	2a e9       	ldi	r18, 0x9A	; 154
     952:	39 e9       	ldi	r19, 0x99	; 153
     954:	49 e9       	ldi	r20, 0x99	; 153
     956:	5e e3       	ldi	r21, 0x3E	; 62
     958:	c7 01       	movw	r24, r14
     95a:	b6 01       	movw	r22, r12
     95c:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     960:	81 11       	cpse	r24, r1
     962:	0d c0       	rjmp	.+26     	; 0x97e <__stack+0x7f>
			menu = 2;
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	a0 e0       	ldi	r26, 0x00	; 0
     96a:	b0 e4       	ldi	r27, 0x40	; 64
     96c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     970:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     974:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     978:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     97c:	1c c0       	rjmp	.+56     	; 0x9b6 <__stack+0xb7>
		}
		if (menu == 0.4){
     97e:	2d ec       	ldi	r18, 0xCD	; 205
     980:	3c ec       	ldi	r19, 0xCC	; 204
     982:	4c ec       	ldi	r20, 0xCC	; 204
     984:	5e e3       	ldi	r21, 0x3E	; 62
     986:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     98a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     98e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     992:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     996:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__cmpsf2>
     99a:	81 11       	cpse	r24, r1
     99c:	0c c0       	rjmp	.+24     	; 0x9b6 <__stack+0xb7>
			menu = 3;
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	a0 e4       	ldi	r26, 0x40	; 64
     9a4:	b0 e4       	ldi	r27, 0x40	; 64
     9a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     9aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     9ae:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     9b2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
	}
	
	
	
	
}
     9b6:	ff 91       	pop	r31
     9b8:	ef 91       	pop	r30
     9ba:	bf 91       	pop	r27
     9bc:	af 91       	pop	r26
     9be:	9f 91       	pop	r25
     9c0:	8f 91       	pop	r24
     9c2:	7f 91       	pop	r23
     9c4:	6f 91       	pop	r22
     9c6:	5f 91       	pop	r21
     9c8:	4f 91       	pop	r20
     9ca:	3f 91       	pop	r19
     9cc:	2f 91       	pop	r18
     9ce:	ff 90       	pop	r15
     9d0:	ef 90       	pop	r14
     9d2:	df 90       	pop	r13
     9d4:	cf 90       	pop	r12
     9d6:	0f 90       	pop	r0
     9d8:	0f be       	out	0x3f, r0	; 63
     9da:	0f 90       	pop	r0
     9dc:	1f 90       	pop	r1
     9de:	18 95       	reti

000009e0 <incrementa_date>:



void incrementa_date(){
	
	if (date_segundo < 59){
     9e0:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <date_segundo>
     9e4:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <date_segundo+0x1>
     9e8:	8b 33       	cpi	r24, 0x3B	; 59
     9ea:	91 05       	cpc	r25, r1
     9ec:	34 f4       	brge	.+12     	; 0x9fa <incrementa_date+0x1a>
		date_segundo+=1;
     9ee:	01 96       	adiw	r24, 0x01	; 1
     9f0:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <date_segundo+0x1>
     9f4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <date_segundo>
     9f8:	08 95       	ret
	}
	else{
		date_segundo=0;
     9fa:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <date_segundo+0x1>
     9fe:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <date_segundo>
		if (date_minuto < 59){
     a02:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <date_minuto>
     a06:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <date_minuto+0x1>
     a0a:	8b 33       	cpi	r24, 0x3B	; 59
     a0c:	91 05       	cpc	r25, r1
     a0e:	34 f4       	brge	.+12     	; 0xa1c <incrementa_date+0x3c>
			date_minuto+=1;
     a10:	01 96       	adiw	r24, 0x01	; 1
     a12:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <date_minuto+0x1>
     a16:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <date_minuto>
     a1a:	08 95       	ret
		}
		else{
			date_minuto=0;
     a1c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <date_minuto+0x1>
     a20:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <date_minuto>
			if (date_hora<23){
     a24:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <date_hora>
     a28:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <date_hora+0x1>
     a2c:	87 31       	cpi	r24, 0x17	; 23
     a2e:	91 05       	cpc	r25, r1
     a30:	34 f4       	brge	.+12     	; 0xa3e <incrementa_date+0x5e>
				date_hora+=1;
     a32:	01 96       	adiw	r24, 0x01	; 1
     a34:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <date_hora+0x1>
     a38:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <date_hora>
     a3c:	08 95       	ret
			}
			else{
				date_hora=0;
     a3e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <date_hora+0x1>
     a42:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <date_hora>
				if (date_dia < 31){
     a46:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <date_dia>
     a4a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <date_dia+0x1>
     a4e:	8f 31       	cpi	r24, 0x1F	; 31
     a50:	91 05       	cpc	r25, r1
     a52:	34 f4       	brge	.+12     	; 0xa60 <incrementa_date+0x80>
					date_dia+=1;
     a54:	01 96       	adiw	r24, 0x01	; 1
     a56:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <date_dia+0x1>
     a5a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <date_dia>
     a5e:	08 95       	ret
				}
				else{
					date_dia=1;
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <date_dia+0x1>
     a68:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <date_dia>
					if (date_mes < 12){
     a6c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <date_mes>
     a70:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <date_mes+0x1>
     a74:	8c 30       	cpi	r24, 0x0C	; 12
     a76:	91 05       	cpc	r25, r1
     a78:	34 f4       	brge	.+12     	; 0xa86 <incrementa_date+0xa6>
						date_mes+=1;
     a7a:	01 96       	adiw	r24, 0x01	; 1
     a7c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <date_mes+0x1>
     a80:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <date_mes>
     a84:	08 95       	ret
					}
					else{
						date_mes=1;
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <date_mes+0x1>
     a8e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <date_mes>
						date_ano+=1;
     a92:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <date_ano>
     a96:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <date_ano+0x1>
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <date_ano+0x1>
     aa0:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <date_ano>
     aa4:	08 95       	ret

00000aa6 <__vector_14>:
	}
	
}


ISR(TIMER0_COMPA_vect){ //Interrupção do TC0 a cada 1 ms (64*249+1))/(16 MHz)
     aa6:	1f 92       	push	r1
     aa8:	0f 92       	push	r0
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	0f 92       	push	r0
     aae:	11 24       	eor	r1, r1
     ab0:	2f 93       	push	r18
     ab2:	3f 93       	push	r19
     ab4:	4f 93       	push	r20
     ab6:	5f 93       	push	r21
     ab8:	6f 93       	push	r22
     aba:	7f 93       	push	r23
     abc:	8f 93       	push	r24
     abe:	9f 93       	push	r25
     ac0:	af 93       	push	r26
     ac2:	bf 93       	push	r27
     ac4:	ef 93       	push	r30
     ac6:	ff 93       	push	r31
	ms+=1;
     ac8:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <ms>
     acc:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <ms+0x1>
     ad0:	01 96       	adiw	r24, 0x01	; 1
	if (ms==1000){
     ad2:	88 3e       	cpi	r24, 0xE8	; 232
     ad4:	23 e0       	ldi	r18, 0x03	; 3
     ad6:	92 07       	cpc	r25, r18
     ad8:	29 f0       	breq	.+10     	; 0xae4 <__vector_14+0x3e>
	
}


ISR(TIMER0_COMPA_vect){ //Interrupção do TC0 a cada 1 ms (64*249+1))/(16 MHz)
	ms+=1;
     ada:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <ms+0x1>
     ade:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <ms>
     ae2:	06 c0       	rjmp	.+12     	; 0xaf0 <__vector_14+0x4a>
	if (ms==1000){
		ms=0;
     ae4:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <ms+0x1>
     ae8:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <ms>
		incrementa_date();
     aec:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <incrementa_date>
	}
	
}
     af0:	ff 91       	pop	r31
     af2:	ef 91       	pop	r30
     af4:	bf 91       	pop	r27
     af6:	af 91       	pop	r26
     af8:	9f 91       	pop	r25
     afa:	8f 91       	pop	r24
     afc:	7f 91       	pop	r23
     afe:	6f 91       	pop	r22
     b00:	5f 91       	pop	r21
     b02:	4f 91       	pop	r20
     b04:	3f 91       	pop	r19
     b06:	2f 91       	pop	r18
     b08:	0f 90       	pop	r0
     b0a:	0f be       	out	0x3f, r0	; 63
     b0c:	0f 90       	pop	r0
     b0e:	1f 90       	pop	r1
     b10:	18 95       	reti

00000b12 <main>:



int main(void)
{
	nokia_lcd_init(); //Inicia o LCD
     b12:	0e 94 da 05 	call	0xbb4	; 0xbb4 <nokia_lcd_init>

		
	USART_Init(MYUBRR);
     b16:	87 e6       	ldi	r24, 0x67	; 103
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	0e 94 5f 02 	call	0x4be	; 0x4be <USART_Init>

	
	//Direção dos pinos das portas C e D
	DDRD = 0x00; //todos os pinos da porta D como entradas.
     b1e:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0xff; //pull-up em todos os pinos da porta D.
     b20:	9f ef       	ldi	r25, 0xFF	; 255
     b22:	9b b9       	out	0x0b, r25	; 11
	
	
	//DDRB = 0xff; //Pinos PB1-PB5 como saídas para o display. A biblioteca já está fazendo isso.
	DDRC = 0b00000010;
     b24:	82 e0       	ldi	r24, 0x02	; 2
     b26:	87 b9       	out	0x07, r24	; 7
	PORTC = 0xff;
     b28:	98 b9       	out	0x08, r25	; 8
	
	
	//Configuração do ADC
	ADMUX = 0b01000000;
     b2a:	90 e4       	ldi	r25, 0x40	; 64
     b2c:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = 0b11101111;
     b30:	9f ee       	ldi	r25, 0xEF	; 239
     b32:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0x00;
     b36:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
	DIDR0 = 0b00111110;
     b3a:	9e e3       	ldi	r25, 0x3E	; 62
     b3c:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
	
	
	//Configuração das interrupções
	EICRA = 0b00001010; //Interrupção INT0 e INT1 na borda de descida.
     b40:	9a e0       	ldi	r25, 0x0A	; 10
     b42:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK = 0b00000011; //Habilita as interrupções INT0 e INT1.
     b46:	93 e0       	ldi	r25, 0x03	; 3
     b48:	9d bb       	out	0x1d, r25	; 29
	
	
	//Parte do Timer
	TCCR0A = 0b00000010; //Habilita modo CTC do TC0, ou seja, comparar com um valor.
     b4a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000011; //liga TC0 com prescaler = 64.
     b4c:	95 bd       	out	0x25, r25	; 37
	OCR0A = 249; //Ajusta o comparador para o TC0 contar de 0 até 249.
     b4e:	99 ef       	ldi	r25, 0xF9	; 249
     b50:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = 0b00000010; //Habilita a interrupção na igualdade de comparação com OCR0A. A interrupção ocorre a cada 1 ms = (64*(249+1)) / (16 MHz).
     b52:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	
	
	sei(); //Habilita interrupções globais, ativando o bit I do SREG
     b56:	78 94       	sei

	
	while(1)
	{
		
		atualiza_display();
     b58:	0e 94 08 03 	call	0x610	; 0x610 <atualiza_display>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b5c:	2f ef       	ldi	r18, 0xFF	; 255
     b5e:	81 ee       	ldi	r24, 0xE1	; 225
     b60:	94 e0       	ldi	r25, 0x04	; 4
     b62:	21 50       	subi	r18, 0x01	; 1
     b64:	80 40       	sbci	r24, 0x00	; 0
     b66:	90 40       	sbci	r25, 0x00	; 0
     b68:	e1 f7       	brne	.-8      	; 0xb62 <main+0x50>
     b6a:	00 c0       	rjmp	.+0      	; 0xb6c <main+0x5a>
     b6c:	00 00       	nop
     b6e:	f4 cf       	rjmp	.-24     	; 0xb58 <main+0x46>

00000b70 <write>:
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
     b70:	29 98       	cbi	0x05, 1	; 5
     b72:	66 23       	and	r22, r22
     b74:	11 f0       	breq	.+4      	; 0xb7a <write+0xa>
     b76:	2b 9a       	sbi	0x05, 3	; 5
     b78:	15 c0       	rjmp	.+42     	; 0xba4 <write+0x34>
     b7a:	2b 98       	cbi	0x05, 3	; 5
     b7c:	13 c0       	rjmp	.+38     	; 0xba4 <write+0x34>
     b7e:	ac 01       	movw	r20, r24
     b80:	02 2e       	mov	r0, r18
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <write+0x18>
     b84:	55 95       	asr	r21
     b86:	47 95       	ror	r20
     b88:	0a 94       	dec	r0
     b8a:	e2 f7       	brpl	.-8      	; 0xb84 <write+0x14>
     b8c:	40 ff       	sbrs	r20, 0
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <write+0x24>
     b90:	2c 9a       	sbi	0x05, 4	; 5
     b92:	01 c0       	rjmp	.+2      	; 0xb96 <write+0x26>
     b94:	2c 98       	cbi	0x05, 4	; 5
     b96:	2d 9a       	sbi	0x05, 5	; 5
     b98:	2d 98       	cbi	0x05, 5	; 5
     b9a:	21 50       	subi	r18, 0x01	; 1
     b9c:	31 09       	sbc	r19, r1
     b9e:	78 f7       	brcc	.-34     	; 0xb7e <write+0xe>
     ba0:	29 9a       	sbi	0x05, 1	; 5
     ba2:	08 95       	ret
     ba4:	27 e0       	ldi	r18, 0x07	; 7
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	e9 cf       	rjmp	.-46     	; 0xb7e <write+0xe>

00000bac <write_cmd>:
     bac:	60 e0       	ldi	r22, 0x00	; 0
     bae:	0e 94 b8 05 	call	0xb70	; 0xb70 <write>
     bb2:	08 95       	ret

00000bb4 <nokia_lcd_init>:
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	21 9a       	sbi	0x04, 1	; 4
     bba:	22 9a       	sbi	0x04, 2	; 4
     bbc:	23 9a       	sbi	0x04, 3	; 4
     bbe:	24 9a       	sbi	0x04, 4	; 4
     bc0:	25 9a       	sbi	0x04, 5	; 4
     bc2:	2a 9a       	sbi	0x05, 2	; 5
     bc4:	29 9a       	sbi	0x05, 1	; 5
     bc6:	83 ec       	ldi	r24, 0xC3	; 195
     bc8:	99 e0       	ldi	r25, 0x09	; 9
     bca:	01 97       	sbiw	r24, 0x01	; 1
     bcc:	f1 f7       	brne	.-4      	; 0xbca <nokia_lcd_init+0x16>
     bce:	00 c0       	rjmp	.+0      	; 0xbd0 <nokia_lcd_init+0x1c>
     bd0:	00 00       	nop
     bd2:	2a 98       	cbi	0x05, 2	; 5
     bd4:	8b e5       	ldi	r24, 0x5B	; 91
     bd6:	94 e4       	ldi	r25, 0x44	; 68
     bd8:	01 97       	sbiw	r24, 0x01	; 1
     bda:	f1 f7       	brne	.-4      	; 0xbd8 <nokia_lcd_init+0x24>
     bdc:	00 c0       	rjmp	.+0      	; 0xbde <nokia_lcd_init+0x2a>
     bde:	00 00       	nop
     be0:	2a 9a       	sbi	0x05, 2	; 5
     be2:	29 98       	cbi	0x05, 1	; 5
     be4:	81 e2       	ldi	r24, 0x21	; 33
     be6:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     bea:	83 e1       	ldi	r24, 0x13	; 19
     bec:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     bf0:	86 e0       	ldi	r24, 0x06	; 6
     bf2:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     bf6:	82 ec       	ldi	r24, 0xC2	; 194
     bf8:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     bfc:	80 e2       	ldi	r24, 0x20	; 32
     bfe:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c02:	89 e0       	ldi	r24, 0x09	; 9
     c04:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c08:	80 e8       	ldi	r24, 0x80	; 128
     c0a:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c0e:	82 e0       	ldi	r24, 0x02	; 2
     c10:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c14:	c8 ef       	ldi	r28, 0xF8	; 248
     c16:	d1 e0       	ldi	r29, 0x01	; 1
     c18:	61 e0       	ldi	r22, 0x01	; 1
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	0e 94 b8 05 	call	0xb70	; 0xb70 <write>
     c20:	21 97       	sbiw	r28, 0x01	; 1
     c22:	d1 f7       	brne	.-12     	; 0xc18 <nokia_lcd_init+0x64>
     c24:	88 e0       	ldi	r24, 0x08	; 8
     c26:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c2a:	8c e0       	ldi	r24, 0x0C	; 12
     c2c:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c30:	df 91       	pop	r29
     c32:	cf 91       	pop	r28
     c34:	08 95       	ret

00000c36 <nokia_lcd_clear>:
     c36:	80 e8       	ldi	r24, 0x80	; 128
     c38:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c3c:	80 e4       	ldi	r24, 0x40	; 64
     c3e:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     c42:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <nokia_lcd+0x1f8>
     c46:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <nokia_lcd+0x1f9>
     c4a:	e2 ea       	ldi	r30, 0xA2	; 162
     c4c:	f1 e0       	ldi	r31, 0x01	; 1
     c4e:	8a e9       	ldi	r24, 0x9A	; 154
     c50:	93 e0       	ldi	r25, 0x03	; 3
     c52:	11 92       	st	Z+, r1
     c54:	e8 17       	cp	r30, r24
     c56:	f9 07       	cpc	r31, r25
     c58:	e1 f7       	brne	.-8      	; 0xc52 <nokia_lcd_clear+0x1c>
     c5a:	08 95       	ret

00000c5c <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     c5c:	26 2f       	mov	r18, r22
     c5e:	26 95       	lsr	r18
     c60:	26 95       	lsr	r18
     c62:	26 95       	lsr	r18
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	34 e5       	ldi	r19, 0x54	; 84
     c68:	23 9f       	mul	r18, r19
     c6a:	80 0d       	add	r24, r0
     c6c:	91 1d       	adc	r25, r1
     c6e:	11 24       	eor	r1, r1
	if (value)
     c70:	44 23       	and	r20, r20
     c72:	79 f0       	breq	.+30     	; 0xc92 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
     c74:	fc 01       	movw	r30, r24
     c76:	ee 55       	subi	r30, 0x5E	; 94
     c78:	fe 4f       	sbci	r31, 0xFE	; 254
     c7a:	67 70       	andi	r22, 0x07	; 7
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <nokia_lcd_set_pixel+0x2a>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	6a 95       	dec	r22
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <nokia_lcd_set_pixel+0x26>
     c8a:	90 81       	ld	r25, Z
     c8c:	89 2b       	or	r24, r25
     c8e:	80 83       	st	Z, r24
     c90:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
     c92:	fc 01       	movw	r30, r24
     c94:	ee 55       	subi	r30, 0x5E	; 94
     c96:	fe 4f       	sbci	r31, 0xFE	; 254
     c98:	67 70       	andi	r22, 0x07	; 7
     c9a:	81 e0       	ldi	r24, 0x01	; 1
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <nokia_lcd_set_pixel+0x48>
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	6a 95       	dec	r22
     ca6:	e2 f7       	brpl	.-8      	; 0xca0 <nokia_lcd_set_pixel+0x44>
     ca8:	80 95       	com	r24
     caa:	90 81       	ld	r25, Z
     cac:	89 23       	and	r24, r25
     cae:	80 83       	st	Z, r24
     cb0:	08 95       	ret

00000cb2 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
     cb2:	5f 92       	push	r5
     cb4:	6f 92       	push	r6
     cb6:	7f 92       	push	r7
     cb8:	8f 92       	push	r8
     cba:	9f 92       	push	r9
     cbc:	af 92       	push	r10
     cbe:	bf 92       	push	r11
     cc0:	cf 92       	push	r12
     cc2:	df 92       	push	r13
     cc4:	ef 92       	push	r14
     cc6:	ff 92       	push	r15
     cc8:	0f 93       	push	r16
     cca:	1f 93       	push	r17
     ccc:	cf 93       	push	r28
     cce:	df 93       	push	r29
     cd0:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     cd2:	26 2f       	mov	r18, r22
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	49 01       	movw	r8, r18
     cd8:	88 0c       	add	r8, r8
     cda:	99 1c       	adc	r9, r9
     cdc:	88 0c       	add	r8, r8
     cde:	99 1c       	adc	r9, r9
     ce0:	82 0e       	add	r8, r18
     ce2:	93 1e       	adc	r9, r19
     ce4:	18 14       	cp	r1, r8
     ce6:	19 04       	cpc	r1, r9
     ce8:	0c f0       	brlt	.+2      	; 0xcec <nokia_lcd_write_char+0x3a>
     cea:	5d c0       	rjmp	.+186    	; 0xda6 <nokia_lcd_write_char+0xf4>
		for (y = 0; y < 7*scale; y++)
     cec:	89 01       	movw	r16, r18
     cee:	00 0f       	add	r16, r16
     cf0:	11 1f       	adc	r17, r17
     cf2:	00 0f       	add	r16, r16
     cf4:	11 1f       	adc	r17, r17
     cf6:	00 0f       	add	r16, r16
     cf8:	11 1f       	adc	r17, r17
     cfa:	02 1b       	sub	r16, r18
     cfc:	13 0b       	sbc	r17, r19
     cfe:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     d00:	a8 2e       	mov	r10, r24
     d02:	b1 2c       	mov	r11, r1
     d04:	c5 01       	movw	r24, r10
     d06:	80 97       	sbiw	r24, 0x20	; 32
     d08:	5c 01       	movw	r10, r24
     d0a:	aa 0c       	add	r10, r10
     d0c:	bb 1c       	adc	r11, r11
     d0e:	aa 0c       	add	r10, r10
     d10:	bb 1c       	adc	r11, r11
     d12:	a8 0e       	add	r10, r24
     d14:	b9 1e       	adc	r11, r25
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     d16:	0f 2e       	mov	r0, r31
     d18:	fb e9       	ldi	r31, 0x9B	; 155
     d1a:	cf 2e       	mov	r12, r31
     d1c:	f3 e0       	ldi	r31, 0x03	; 3
     d1e:	df 2e       	mov	r13, r31
     d20:	f0 2d       	mov	r31, r0
     d22:	0f 2e       	mov	r0, r31
     d24:	fa e9       	ldi	r31, 0x9A	; 154
     d26:	ef 2e       	mov	r14, r31
     d28:	f3 e0       	ldi	r31, 0x03	; 3
     d2a:	ff 2e       	mov	r15, r31
     d2c:	f0 2d       	mov	r31, r0
     d2e:	2d c0       	rjmp	.+90     	; 0xd8a <nokia_lcd_write_char+0xd8>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     d30:	fe 01       	movw	r30, r28
     d32:	24 91       	lpm	r18, Z
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	87 2d       	mov	r24, r7
     d38:	65 2d       	mov	r22, r5
     d3a:	0e 94 0a 09 	call	0x1214	; 0x1214 <__udivmodqi4>
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <nokia_lcd_write_char+0x92>
     d40:	35 95       	asr	r19
     d42:	27 95       	ror	r18
     d44:	8a 95       	dec	r24
     d46:	e2 f7       	brpl	.-8      	; 0xd40 <nokia_lcd_write_char+0x8e>
     d48:	20 ff       	sbrs	r18, 0
     d4a:	0a c0       	rjmp	.+20     	; 0xd60 <nokia_lcd_write_char+0xae>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     d4c:	f6 01       	movw	r30, r12
     d4e:	60 81       	ld	r22, Z
     d50:	67 0d       	add	r22, r7
     d52:	f7 01       	movw	r30, r14
     d54:	80 81       	ld	r24, Z
     d56:	41 e0       	ldi	r20, 0x01	; 1
     d58:	86 0d       	add	r24, r6
     d5a:	0e 94 2e 06 	call	0xc5c	; 0xc5c <nokia_lcd_set_pixel>
     d5e:	09 c0       	rjmp	.+18     	; 0xd72 <nokia_lcd_write_char+0xc0>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     d60:	f6 01       	movw	r30, r12
     d62:	60 81       	ld	r22, Z
     d64:	67 0d       	add	r22, r7
     d66:	f7 01       	movw	r30, r14
     d68:	80 81       	ld	r24, Z
     d6a:	40 e0       	ldi	r20, 0x00	; 0
     d6c:	86 0d       	add	r24, r6
     d6e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
     d72:	73 94       	inc	r7
     d74:	87 2d       	mov	r24, r7
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	80 17       	cp	r24, r16
     d7a:	91 07       	cpc	r25, r17
     d7c:	cc f2       	brlt	.-78     	; 0xd30 <nokia_lcd_write_char+0x7e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     d7e:	63 94       	inc	r6
     d80:	86 2d       	mov	r24, r6
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	88 15       	cp	r24, r8
     d86:	99 05       	cpc	r25, r9
     d88:	74 f4       	brge	.+28     	; 0xda6 <nokia_lcd_write_char+0xf4>
		for (y = 0; y < 7*scale; y++)
     d8a:	10 16       	cp	r1, r16
     d8c:	11 06       	cpc	r1, r17
     d8e:	bc f7       	brge	.-18     	; 0xd7e <nokia_lcd_write_char+0xcc>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     d90:	86 2d       	mov	r24, r6
     d92:	65 2d       	mov	r22, r5
     d94:	0e 94 0a 09 	call	0x1214	; 0x1214 <__udivmodqi4>
     d98:	e5 01       	movw	r28, r10
     d9a:	c8 0f       	add	r28, r24
     d9c:	d1 1d       	adc	r29, r1
     d9e:	c2 53       	subi	r28, 0x32	; 50
     da0:	df 4f       	sbci	r29, 0xFF	; 255
     da2:	71 2c       	mov	r7, r1
     da4:	c5 cf       	rjmp	.-118    	; 0xd30 <nokia_lcd_write_char+0x7e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     da6:	80 91 9a 03 	lds	r24, 0x039A	; 0x80039a <nokia_lcd+0x1f8>
     daa:	91 e0       	ldi	r25, 0x01	; 1
     dac:	98 0f       	add	r25, r24
     dae:	85 2d       	mov	r24, r5
     db0:	88 0f       	add	r24, r24
     db2:	88 0f       	add	r24, r24
     db4:	85 0d       	add	r24, r5
     db6:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
     db8:	84 35       	cpi	r24, 0x54	; 84
     dba:	18 f4       	brcc	.+6      	; 0xdc2 <nokia_lcd_write_char+0x110>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     dbc:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <nokia_lcd+0x1f8>
     dc0:	0e c0       	rjmp	.+28     	; 0xdde <nokia_lcd_write_char+0x12c>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
     dc2:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
     dc6:	eb e9       	ldi	r30, 0x9B	; 155
     dc8:	f3 e0       	ldi	r31, 0x03	; 3
     dca:	80 81       	ld	r24, Z
     dcc:	91 e0       	ldi	r25, 0x01	; 1
     dce:	98 0f       	add	r25, r24
     dd0:	85 2d       	mov	r24, r5
     dd2:	88 0f       	add	r24, r24
     dd4:	88 0f       	add	r24, r24
     dd6:	88 0f       	add	r24, r24
     dd8:	85 19       	sub	r24, r5
     dda:	89 0f       	add	r24, r25
     ddc:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
     dde:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <nokia_lcd+0x1f9>
     de2:	80 33       	cpi	r24, 0x30	; 48
     de4:	20 f0       	brcs	.+8      	; 0xdee <nokia_lcd_write_char+0x13c>
		nokia_lcd.cursor_x = 0;
     de6:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
     dea:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <nokia_lcd+0x1f9>
	}
}
     dee:	df 91       	pop	r29
     df0:	cf 91       	pop	r28
     df2:	1f 91       	pop	r17
     df4:	0f 91       	pop	r16
     df6:	ff 90       	pop	r15
     df8:	ef 90       	pop	r14
     dfa:	df 90       	pop	r13
     dfc:	cf 90       	pop	r12
     dfe:	bf 90       	pop	r11
     e00:	af 90       	pop	r10
     e02:	9f 90       	pop	r9
     e04:	8f 90       	pop	r8
     e06:	7f 90       	pop	r7
     e08:	6f 90       	pop	r6
     e0a:	5f 90       	pop	r5
     e0c:	08 95       	ret

00000e0e <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
     e0e:	1f 93       	push	r17
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	ec 01       	movw	r28, r24
	while(*str)
     e16:	88 81       	ld	r24, Y
     e18:	88 23       	and	r24, r24
     e1a:	41 f0       	breq	.+16     	; 0xe2c <nokia_lcd_write_string+0x1e>
     e1c:	16 2f       	mov	r17, r22
     e1e:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
     e20:	61 2f       	mov	r22, r17
     e22:	0e 94 59 06 	call	0xcb2	; 0xcb2 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
     e26:	89 91       	ld	r24, Y+
     e28:	81 11       	cpse	r24, r1
     e2a:	fa cf       	rjmp	.-12     	; 0xe20 <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
     e2c:	df 91       	pop	r29
     e2e:	cf 91       	pop	r28
     e30:	1f 91       	pop	r17
     e32:	08 95       	ret

00000e34 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
     e34:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
     e38:	60 93 9b 03 	sts	0x039B, r22	; 0x80039b <nokia_lcd+0x1f9>
     e3c:	08 95       	ret

00000e3e <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
     e3e:	0f 93       	push	r16
     e40:	1f 93       	push	r17
     e42:	cf 93       	push	r28
     e44:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     e46:	80 e8       	ldi	r24, 0x80	; 128
     e48:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
	write_cmd(0x40);
     e4c:	80 e4       	ldi	r24, 0x40	; 64
     e4e:	0e 94 d6 05 	call	0xbac	; 0xbac <write_cmd>
     e52:	c2 ea       	ldi	r28, 0xA2	; 162
     e54:	d1 e0       	ldi	r29, 0x01	; 1
     e56:	0a e9       	ldi	r16, 0x9A	; 154
     e58:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
     e5a:	61 e0       	ldi	r22, 0x01	; 1
     e5c:	89 91       	ld	r24, Y+
     e5e:	0e 94 b8 05 	call	0xb70	; 0xb70 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     e62:	c0 17       	cp	r28, r16
     e64:	d1 07       	cpc	r29, r17
     e66:	c9 f7       	brne	.-14     	; 0xe5a <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
     e68:	df 91       	pop	r29
     e6a:	cf 91       	pop	r28
     e6c:	1f 91       	pop	r17
     e6e:	0f 91       	pop	r16
     e70:	08 95       	ret

00000e72 <__subsf3>:
     e72:	50 58       	subi	r21, 0x80	; 128

00000e74 <__addsf3>:
     e74:	bb 27       	eor	r27, r27
     e76:	aa 27       	eor	r26, r26
     e78:	0e 94 51 07 	call	0xea2	; 0xea2 <__addsf3x>
     e7c:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <__fp_round>
     e80:	0e 94 bd 08 	call	0x117a	; 0x117a <__fp_pscA>
     e84:	38 f0       	brcs	.+14     	; 0xe94 <__addsf3+0x20>
     e86:	0e 94 c4 08 	call	0x1188	; 0x1188 <__fp_pscB>
     e8a:	20 f0       	brcs	.+8      	; 0xe94 <__addsf3+0x20>
     e8c:	39 f4       	brne	.+14     	; 0xe9c <__addsf3+0x28>
     e8e:	9f 3f       	cpi	r25, 0xFF	; 255
     e90:	19 f4       	brne	.+6      	; 0xe98 <__addsf3+0x24>
     e92:	26 f4       	brtc	.+8      	; 0xe9c <__addsf3+0x28>
     e94:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__fp_nan>
     e98:	0e f4       	brtc	.+2      	; 0xe9c <__addsf3+0x28>
     e9a:	e0 95       	com	r30
     e9c:	e7 fb       	bst	r30, 7
     e9e:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__fp_inf>

00000ea2 <__addsf3x>:
     ea2:	e9 2f       	mov	r30, r25
     ea4:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__fp_split3>
     ea8:	58 f3       	brcs	.-42     	; 0xe80 <__addsf3+0xc>
     eaa:	ba 17       	cp	r27, r26
     eac:	62 07       	cpc	r22, r18
     eae:	73 07       	cpc	r23, r19
     eb0:	84 07       	cpc	r24, r20
     eb2:	95 07       	cpc	r25, r21
     eb4:	20 f0       	brcs	.+8      	; 0xebe <__addsf3x+0x1c>
     eb6:	79 f4       	brne	.+30     	; 0xed6 <__addsf3x+0x34>
     eb8:	a6 f5       	brtc	.+104    	; 0xf22 <__addsf3x+0x80>
     eba:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_zero>
     ebe:	0e f4       	brtc	.+2      	; 0xec2 <__addsf3x+0x20>
     ec0:	e0 95       	com	r30
     ec2:	0b 2e       	mov	r0, r27
     ec4:	ba 2f       	mov	r27, r26
     ec6:	a0 2d       	mov	r26, r0
     ec8:	0b 01       	movw	r0, r22
     eca:	b9 01       	movw	r22, r18
     ecc:	90 01       	movw	r18, r0
     ece:	0c 01       	movw	r0, r24
     ed0:	ca 01       	movw	r24, r20
     ed2:	a0 01       	movw	r20, r0
     ed4:	11 24       	eor	r1, r1
     ed6:	ff 27       	eor	r31, r31
     ed8:	59 1b       	sub	r21, r25
     eda:	99 f0       	breq	.+38     	; 0xf02 <__addsf3x+0x60>
     edc:	59 3f       	cpi	r21, 0xF9	; 249
     ede:	50 f4       	brcc	.+20     	; 0xef4 <__addsf3x+0x52>
     ee0:	50 3e       	cpi	r21, 0xE0	; 224
     ee2:	68 f1       	brcs	.+90     	; 0xf3e <__addsf3x+0x9c>
     ee4:	1a 16       	cp	r1, r26
     ee6:	f0 40       	sbci	r31, 0x00	; 0
     ee8:	a2 2f       	mov	r26, r18
     eea:	23 2f       	mov	r18, r19
     eec:	34 2f       	mov	r19, r20
     eee:	44 27       	eor	r20, r20
     ef0:	58 5f       	subi	r21, 0xF8	; 248
     ef2:	f3 cf       	rjmp	.-26     	; 0xeda <__addsf3x+0x38>
     ef4:	46 95       	lsr	r20
     ef6:	37 95       	ror	r19
     ef8:	27 95       	ror	r18
     efa:	a7 95       	ror	r26
     efc:	f0 40       	sbci	r31, 0x00	; 0
     efe:	53 95       	inc	r21
     f00:	c9 f7       	brne	.-14     	; 0xef4 <__addsf3x+0x52>
     f02:	7e f4       	brtc	.+30     	; 0xf22 <__addsf3x+0x80>
     f04:	1f 16       	cp	r1, r31
     f06:	ba 0b       	sbc	r27, r26
     f08:	62 0b       	sbc	r22, r18
     f0a:	73 0b       	sbc	r23, r19
     f0c:	84 0b       	sbc	r24, r20
     f0e:	ba f0       	brmi	.+46     	; 0xf3e <__addsf3x+0x9c>
     f10:	91 50       	subi	r25, 0x01	; 1
     f12:	a1 f0       	breq	.+40     	; 0xf3c <__addsf3x+0x9a>
     f14:	ff 0f       	add	r31, r31
     f16:	bb 1f       	adc	r27, r27
     f18:	66 1f       	adc	r22, r22
     f1a:	77 1f       	adc	r23, r23
     f1c:	88 1f       	adc	r24, r24
     f1e:	c2 f7       	brpl	.-16     	; 0xf10 <__addsf3x+0x6e>
     f20:	0e c0       	rjmp	.+28     	; 0xf3e <__addsf3x+0x9c>
     f22:	ba 0f       	add	r27, r26
     f24:	62 1f       	adc	r22, r18
     f26:	73 1f       	adc	r23, r19
     f28:	84 1f       	adc	r24, r20
     f2a:	48 f4       	brcc	.+18     	; 0xf3e <__addsf3x+0x9c>
     f2c:	87 95       	ror	r24
     f2e:	77 95       	ror	r23
     f30:	67 95       	ror	r22
     f32:	b7 95       	ror	r27
     f34:	f7 95       	ror	r31
     f36:	9e 3f       	cpi	r25, 0xFE	; 254
     f38:	08 f0       	brcs	.+2      	; 0xf3c <__addsf3x+0x9a>
     f3a:	b0 cf       	rjmp	.-160    	; 0xe9c <__addsf3+0x28>
     f3c:	93 95       	inc	r25
     f3e:	88 0f       	add	r24, r24
     f40:	08 f0       	brcs	.+2      	; 0xf44 <__addsf3x+0xa2>
     f42:	99 27       	eor	r25, r25
     f44:	ee 0f       	add	r30, r30
     f46:	97 95       	ror	r25
     f48:	87 95       	ror	r24
     f4a:	08 95       	ret

00000f4c <__cmpsf2>:
     f4c:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_cmp>
     f50:	08 f4       	brcc	.+2      	; 0xf54 <__cmpsf2+0x8>
     f52:	81 e0       	ldi	r24, 0x01	; 1
     f54:	08 95       	ret

00000f56 <__divsf3>:
     f56:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__divsf3x>
     f5a:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <__fp_round>
     f5e:	0e 94 c4 08 	call	0x1188	; 0x1188 <__fp_pscB>
     f62:	58 f0       	brcs	.+22     	; 0xf7a <__divsf3+0x24>
     f64:	0e 94 bd 08 	call	0x117a	; 0x117a <__fp_pscA>
     f68:	40 f0       	brcs	.+16     	; 0xf7a <__divsf3+0x24>
     f6a:	29 f4       	brne	.+10     	; 0xf76 <__divsf3+0x20>
     f6c:	5f 3f       	cpi	r21, 0xFF	; 255
     f6e:	29 f0       	breq	.+10     	; 0xf7a <__divsf3+0x24>
     f70:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__fp_inf>
     f74:	51 11       	cpse	r21, r1
     f76:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_szero>
     f7a:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__fp_nan>

00000f7e <__divsf3x>:
     f7e:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__fp_split3>
     f82:	68 f3       	brcs	.-38     	; 0xf5e <__divsf3+0x8>

00000f84 <__divsf3_pse>:
     f84:	99 23       	and	r25, r25
     f86:	b1 f3       	breq	.-20     	; 0xf74 <__divsf3+0x1e>
     f88:	55 23       	and	r21, r21
     f8a:	91 f3       	breq	.-28     	; 0xf70 <__divsf3+0x1a>
     f8c:	95 1b       	sub	r25, r21
     f8e:	55 0b       	sbc	r21, r21
     f90:	bb 27       	eor	r27, r27
     f92:	aa 27       	eor	r26, r26
     f94:	62 17       	cp	r22, r18
     f96:	73 07       	cpc	r23, r19
     f98:	84 07       	cpc	r24, r20
     f9a:	38 f0       	brcs	.+14     	; 0xfaa <__divsf3_pse+0x26>
     f9c:	9f 5f       	subi	r25, 0xFF	; 255
     f9e:	5f 4f       	sbci	r21, 0xFF	; 255
     fa0:	22 0f       	add	r18, r18
     fa2:	33 1f       	adc	r19, r19
     fa4:	44 1f       	adc	r20, r20
     fa6:	aa 1f       	adc	r26, r26
     fa8:	a9 f3       	breq	.-22     	; 0xf94 <__divsf3_pse+0x10>
     faa:	35 d0       	rcall	.+106    	; 0x1016 <__divsf3_pse+0x92>
     fac:	0e 2e       	mov	r0, r30
     fae:	3a f0       	brmi	.+14     	; 0xfbe <__divsf3_pse+0x3a>
     fb0:	e0 e8       	ldi	r30, 0x80	; 128
     fb2:	32 d0       	rcall	.+100    	; 0x1018 <__divsf3_pse+0x94>
     fb4:	91 50       	subi	r25, 0x01	; 1
     fb6:	50 40       	sbci	r21, 0x00	; 0
     fb8:	e6 95       	lsr	r30
     fba:	00 1c       	adc	r0, r0
     fbc:	ca f7       	brpl	.-14     	; 0xfb0 <__divsf3_pse+0x2c>
     fbe:	2b d0       	rcall	.+86     	; 0x1016 <__divsf3_pse+0x92>
     fc0:	fe 2f       	mov	r31, r30
     fc2:	29 d0       	rcall	.+82     	; 0x1016 <__divsf3_pse+0x92>
     fc4:	66 0f       	add	r22, r22
     fc6:	77 1f       	adc	r23, r23
     fc8:	88 1f       	adc	r24, r24
     fca:	bb 1f       	adc	r27, r27
     fcc:	26 17       	cp	r18, r22
     fce:	37 07       	cpc	r19, r23
     fd0:	48 07       	cpc	r20, r24
     fd2:	ab 07       	cpc	r26, r27
     fd4:	b0 e8       	ldi	r27, 0x80	; 128
     fd6:	09 f0       	breq	.+2      	; 0xfda <__divsf3_pse+0x56>
     fd8:	bb 0b       	sbc	r27, r27
     fda:	80 2d       	mov	r24, r0
     fdc:	bf 01       	movw	r22, r30
     fde:	ff 27       	eor	r31, r31
     fe0:	93 58       	subi	r25, 0x83	; 131
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	3a f0       	brmi	.+14     	; 0xff4 <__divsf3_pse+0x70>
     fe6:	9e 3f       	cpi	r25, 0xFE	; 254
     fe8:	51 05       	cpc	r21, r1
     fea:	78 f0       	brcs	.+30     	; 0x100a <__divsf3_pse+0x86>
     fec:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__fp_inf>
     ff0:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_szero>
     ff4:	5f 3f       	cpi	r21, 0xFF	; 255
     ff6:	e4 f3       	brlt	.-8      	; 0xff0 <__divsf3_pse+0x6c>
     ff8:	98 3e       	cpi	r25, 0xE8	; 232
     ffa:	d4 f3       	brlt	.-12     	; 0xff0 <__divsf3_pse+0x6c>
     ffc:	86 95       	lsr	r24
     ffe:	77 95       	ror	r23
    1000:	67 95       	ror	r22
    1002:	b7 95       	ror	r27
    1004:	f7 95       	ror	r31
    1006:	9f 5f       	subi	r25, 0xFF	; 255
    1008:	c9 f7       	brne	.-14     	; 0xffc <__divsf3_pse+0x78>
    100a:	88 0f       	add	r24, r24
    100c:	91 1d       	adc	r25, r1
    100e:	96 95       	lsr	r25
    1010:	87 95       	ror	r24
    1012:	97 f9       	bld	r25, 7
    1014:	08 95       	ret
    1016:	e1 e0       	ldi	r30, 0x01	; 1
    1018:	66 0f       	add	r22, r22
    101a:	77 1f       	adc	r23, r23
    101c:	88 1f       	adc	r24, r24
    101e:	bb 1f       	adc	r27, r27
    1020:	62 17       	cp	r22, r18
    1022:	73 07       	cpc	r23, r19
    1024:	84 07       	cpc	r24, r20
    1026:	ba 07       	cpc	r27, r26
    1028:	20 f0       	brcs	.+8      	; 0x1032 <__divsf3_pse+0xae>
    102a:	62 1b       	sub	r22, r18
    102c:	73 0b       	sbc	r23, r19
    102e:	84 0b       	sbc	r24, r20
    1030:	ba 0b       	sbc	r27, r26
    1032:	ee 1f       	adc	r30, r30
    1034:	88 f7       	brcc	.-30     	; 0x1018 <__divsf3_pse+0x94>
    1036:	e0 95       	com	r30
    1038:	08 95       	ret

0000103a <__fixsfsi>:
    103a:	0e 94 24 08 	call	0x1048	; 0x1048 <__fixunssfsi>
    103e:	68 94       	set
    1040:	b1 11       	cpse	r27, r1
    1042:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__fp_szero>
    1046:	08 95       	ret

00001048 <__fixunssfsi>:
    1048:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__fp_splitA>
    104c:	88 f0       	brcs	.+34     	; 0x1070 <__fixunssfsi+0x28>
    104e:	9f 57       	subi	r25, 0x7F	; 127
    1050:	98 f0       	brcs	.+38     	; 0x1078 <__fixunssfsi+0x30>
    1052:	b9 2f       	mov	r27, r25
    1054:	99 27       	eor	r25, r25
    1056:	b7 51       	subi	r27, 0x17	; 23
    1058:	b0 f0       	brcs	.+44     	; 0x1086 <__fixunssfsi+0x3e>
    105a:	e1 f0       	breq	.+56     	; 0x1094 <__fixunssfsi+0x4c>
    105c:	66 0f       	add	r22, r22
    105e:	77 1f       	adc	r23, r23
    1060:	88 1f       	adc	r24, r24
    1062:	99 1f       	adc	r25, r25
    1064:	1a f0       	brmi	.+6      	; 0x106c <__fixunssfsi+0x24>
    1066:	ba 95       	dec	r27
    1068:	c9 f7       	brne	.-14     	; 0x105c <__fixunssfsi+0x14>
    106a:	14 c0       	rjmp	.+40     	; 0x1094 <__fixunssfsi+0x4c>
    106c:	b1 30       	cpi	r27, 0x01	; 1
    106e:	91 f0       	breq	.+36     	; 0x1094 <__fixunssfsi+0x4c>
    1070:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__fp_zero>
    1074:	b1 e0       	ldi	r27, 0x01	; 1
    1076:	08 95       	ret
    1078:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_zero>
    107c:	67 2f       	mov	r22, r23
    107e:	78 2f       	mov	r23, r24
    1080:	88 27       	eor	r24, r24
    1082:	b8 5f       	subi	r27, 0xF8	; 248
    1084:	39 f0       	breq	.+14     	; 0x1094 <__fixunssfsi+0x4c>
    1086:	b9 3f       	cpi	r27, 0xF9	; 249
    1088:	cc f3       	brlt	.-14     	; 0x107c <__fixunssfsi+0x34>
    108a:	86 95       	lsr	r24
    108c:	77 95       	ror	r23
    108e:	67 95       	ror	r22
    1090:	b3 95       	inc	r27
    1092:	d9 f7       	brne	.-10     	; 0x108a <__fixunssfsi+0x42>
    1094:	3e f4       	brtc	.+14     	; 0x10a4 <__fixunssfsi+0x5c>
    1096:	90 95       	com	r25
    1098:	80 95       	com	r24
    109a:	70 95       	com	r23
    109c:	61 95       	neg	r22
    109e:	7f 4f       	sbci	r23, 0xFF	; 255
    10a0:	8f 4f       	sbci	r24, 0xFF	; 255
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	08 95       	ret

000010a6 <__floatunsisf>:
    10a6:	e8 94       	clt
    10a8:	09 c0       	rjmp	.+18     	; 0x10bc <__floatsisf+0x12>

000010aa <__floatsisf>:
    10aa:	97 fb       	bst	r25, 7
    10ac:	3e f4       	brtc	.+14     	; 0x10bc <__floatsisf+0x12>
    10ae:	90 95       	com	r25
    10b0:	80 95       	com	r24
    10b2:	70 95       	com	r23
    10b4:	61 95       	neg	r22
    10b6:	7f 4f       	sbci	r23, 0xFF	; 255
    10b8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ba:	9f 4f       	sbci	r25, 0xFF	; 255
    10bc:	99 23       	and	r25, r25
    10be:	a9 f0       	breq	.+42     	; 0x10ea <__floatsisf+0x40>
    10c0:	f9 2f       	mov	r31, r25
    10c2:	96 e9       	ldi	r25, 0x96	; 150
    10c4:	bb 27       	eor	r27, r27
    10c6:	93 95       	inc	r25
    10c8:	f6 95       	lsr	r31
    10ca:	87 95       	ror	r24
    10cc:	77 95       	ror	r23
    10ce:	67 95       	ror	r22
    10d0:	b7 95       	ror	r27
    10d2:	f1 11       	cpse	r31, r1
    10d4:	f8 cf       	rjmp	.-16     	; 0x10c6 <__floatsisf+0x1c>
    10d6:	fa f4       	brpl	.+62     	; 0x1116 <__floatsisf+0x6c>
    10d8:	bb 0f       	add	r27, r27
    10da:	11 f4       	brne	.+4      	; 0x10e0 <__floatsisf+0x36>
    10dc:	60 ff       	sbrs	r22, 0
    10de:	1b c0       	rjmp	.+54     	; 0x1116 <__floatsisf+0x6c>
    10e0:	6f 5f       	subi	r22, 0xFF	; 255
    10e2:	7f 4f       	sbci	r23, 0xFF	; 255
    10e4:	8f 4f       	sbci	r24, 0xFF	; 255
    10e6:	9f 4f       	sbci	r25, 0xFF	; 255
    10e8:	16 c0       	rjmp	.+44     	; 0x1116 <__floatsisf+0x6c>
    10ea:	88 23       	and	r24, r24
    10ec:	11 f0       	breq	.+4      	; 0x10f2 <__floatsisf+0x48>
    10ee:	96 e9       	ldi	r25, 0x96	; 150
    10f0:	11 c0       	rjmp	.+34     	; 0x1114 <__floatsisf+0x6a>
    10f2:	77 23       	and	r23, r23
    10f4:	21 f0       	breq	.+8      	; 0x10fe <__floatsisf+0x54>
    10f6:	9e e8       	ldi	r25, 0x8E	; 142
    10f8:	87 2f       	mov	r24, r23
    10fa:	76 2f       	mov	r23, r22
    10fc:	05 c0       	rjmp	.+10     	; 0x1108 <__floatsisf+0x5e>
    10fe:	66 23       	and	r22, r22
    1100:	71 f0       	breq	.+28     	; 0x111e <__floatsisf+0x74>
    1102:	96 e8       	ldi	r25, 0x86	; 134
    1104:	86 2f       	mov	r24, r22
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	2a f0       	brmi	.+10     	; 0x1116 <__floatsisf+0x6c>
    110c:	9a 95       	dec	r25
    110e:	66 0f       	add	r22, r22
    1110:	77 1f       	adc	r23, r23
    1112:	88 1f       	adc	r24, r24
    1114:	da f7       	brpl	.-10     	; 0x110c <__floatsisf+0x62>
    1116:	88 0f       	add	r24, r24
    1118:	96 95       	lsr	r25
    111a:	87 95       	ror	r24
    111c:	97 f9       	bld	r25, 7
    111e:	08 95       	ret

00001120 <__fp_cmp>:
    1120:	99 0f       	add	r25, r25
    1122:	00 08       	sbc	r0, r0
    1124:	55 0f       	add	r21, r21
    1126:	aa 0b       	sbc	r26, r26
    1128:	e0 e8       	ldi	r30, 0x80	; 128
    112a:	fe ef       	ldi	r31, 0xFE	; 254
    112c:	16 16       	cp	r1, r22
    112e:	17 06       	cpc	r1, r23
    1130:	e8 07       	cpc	r30, r24
    1132:	f9 07       	cpc	r31, r25
    1134:	c0 f0       	brcs	.+48     	; 0x1166 <__fp_cmp+0x46>
    1136:	12 16       	cp	r1, r18
    1138:	13 06       	cpc	r1, r19
    113a:	e4 07       	cpc	r30, r20
    113c:	f5 07       	cpc	r31, r21
    113e:	98 f0       	brcs	.+38     	; 0x1166 <__fp_cmp+0x46>
    1140:	62 1b       	sub	r22, r18
    1142:	73 0b       	sbc	r23, r19
    1144:	84 0b       	sbc	r24, r20
    1146:	95 0b       	sbc	r25, r21
    1148:	39 f4       	brne	.+14     	; 0x1158 <__fp_cmp+0x38>
    114a:	0a 26       	eor	r0, r26
    114c:	61 f0       	breq	.+24     	; 0x1166 <__fp_cmp+0x46>
    114e:	23 2b       	or	r18, r19
    1150:	24 2b       	or	r18, r20
    1152:	25 2b       	or	r18, r21
    1154:	21 f4       	brne	.+8      	; 0x115e <__fp_cmp+0x3e>
    1156:	08 95       	ret
    1158:	0a 26       	eor	r0, r26
    115a:	09 f4       	brne	.+2      	; 0x115e <__fp_cmp+0x3e>
    115c:	a1 40       	sbci	r26, 0x01	; 1
    115e:	a6 95       	lsr	r26
    1160:	8f ef       	ldi	r24, 0xFF	; 255
    1162:	81 1d       	adc	r24, r1
    1164:	81 1d       	adc	r24, r1
    1166:	08 95       	ret

00001168 <__fp_inf>:
    1168:	97 f9       	bld	r25, 7
    116a:	9f 67       	ori	r25, 0x7F	; 127
    116c:	80 e8       	ldi	r24, 0x80	; 128
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	60 e0       	ldi	r22, 0x00	; 0
    1172:	08 95       	ret

00001174 <__fp_nan>:
    1174:	9f ef       	ldi	r25, 0xFF	; 255
    1176:	80 ec       	ldi	r24, 0xC0	; 192
    1178:	08 95       	ret

0000117a <__fp_pscA>:
    117a:	00 24       	eor	r0, r0
    117c:	0a 94       	dec	r0
    117e:	16 16       	cp	r1, r22
    1180:	17 06       	cpc	r1, r23
    1182:	18 06       	cpc	r1, r24
    1184:	09 06       	cpc	r0, r25
    1186:	08 95       	ret

00001188 <__fp_pscB>:
    1188:	00 24       	eor	r0, r0
    118a:	0a 94       	dec	r0
    118c:	12 16       	cp	r1, r18
    118e:	13 06       	cpc	r1, r19
    1190:	14 06       	cpc	r1, r20
    1192:	05 06       	cpc	r0, r21
    1194:	08 95       	ret

00001196 <__fp_round>:
    1196:	09 2e       	mov	r0, r25
    1198:	03 94       	inc	r0
    119a:	00 0c       	add	r0, r0
    119c:	11 f4       	brne	.+4      	; 0x11a2 <__fp_round+0xc>
    119e:	88 23       	and	r24, r24
    11a0:	52 f0       	brmi	.+20     	; 0x11b6 <__fp_round+0x20>
    11a2:	bb 0f       	add	r27, r27
    11a4:	40 f4       	brcc	.+16     	; 0x11b6 <__fp_round+0x20>
    11a6:	bf 2b       	or	r27, r31
    11a8:	11 f4       	brne	.+4      	; 0x11ae <__fp_round+0x18>
    11aa:	60 ff       	sbrs	r22, 0
    11ac:	04 c0       	rjmp	.+8      	; 0x11b6 <__fp_round+0x20>
    11ae:	6f 5f       	subi	r22, 0xFF	; 255
    11b0:	7f 4f       	sbci	r23, 0xFF	; 255
    11b2:	8f 4f       	sbci	r24, 0xFF	; 255
    11b4:	9f 4f       	sbci	r25, 0xFF	; 255
    11b6:	08 95       	ret

000011b8 <__fp_split3>:
    11b8:	57 fd       	sbrc	r21, 7
    11ba:	90 58       	subi	r25, 0x80	; 128
    11bc:	44 0f       	add	r20, r20
    11be:	55 1f       	adc	r21, r21
    11c0:	59 f0       	breq	.+22     	; 0x11d8 <__fp_splitA+0x10>
    11c2:	5f 3f       	cpi	r21, 0xFF	; 255
    11c4:	71 f0       	breq	.+28     	; 0x11e2 <__fp_splitA+0x1a>
    11c6:	47 95       	ror	r20

000011c8 <__fp_splitA>:
    11c8:	88 0f       	add	r24, r24
    11ca:	97 fb       	bst	r25, 7
    11cc:	99 1f       	adc	r25, r25
    11ce:	61 f0       	breq	.+24     	; 0x11e8 <__fp_splitA+0x20>
    11d0:	9f 3f       	cpi	r25, 0xFF	; 255
    11d2:	79 f0       	breq	.+30     	; 0x11f2 <__fp_splitA+0x2a>
    11d4:	87 95       	ror	r24
    11d6:	08 95       	ret
    11d8:	12 16       	cp	r1, r18
    11da:	13 06       	cpc	r1, r19
    11dc:	14 06       	cpc	r1, r20
    11de:	55 1f       	adc	r21, r21
    11e0:	f2 cf       	rjmp	.-28     	; 0x11c6 <__fp_split3+0xe>
    11e2:	46 95       	lsr	r20
    11e4:	f1 df       	rcall	.-30     	; 0x11c8 <__fp_splitA>
    11e6:	08 c0       	rjmp	.+16     	; 0x11f8 <__fp_splitA+0x30>
    11e8:	16 16       	cp	r1, r22
    11ea:	17 06       	cpc	r1, r23
    11ec:	18 06       	cpc	r1, r24
    11ee:	99 1f       	adc	r25, r25
    11f0:	f1 cf       	rjmp	.-30     	; 0x11d4 <__fp_splitA+0xc>
    11f2:	86 95       	lsr	r24
    11f4:	71 05       	cpc	r23, r1
    11f6:	61 05       	cpc	r22, r1
    11f8:	08 94       	sec
    11fa:	08 95       	ret

000011fc <__fp_zero>:
    11fc:	e8 94       	clt

000011fe <__fp_szero>:
    11fe:	bb 27       	eor	r27, r27
    1200:	66 27       	eor	r22, r22
    1202:	77 27       	eor	r23, r23
    1204:	cb 01       	movw	r24, r22
    1206:	97 f9       	bld	r25, 7
    1208:	08 95       	ret

0000120a <__gesf2>:
    120a:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_cmp>
    120e:	08 f4       	brcc	.+2      	; 0x1212 <__gesf2+0x8>
    1210:	8f ef       	ldi	r24, 0xFF	; 255
    1212:	08 95       	ret

00001214 <__udivmodqi4>:
    1214:	99 1b       	sub	r25, r25
    1216:	79 e0       	ldi	r23, 0x09	; 9
    1218:	04 c0       	rjmp	.+8      	; 0x1222 <__udivmodqi4_ep>

0000121a <__udivmodqi4_loop>:
    121a:	99 1f       	adc	r25, r25
    121c:	96 17       	cp	r25, r22
    121e:	08 f0       	brcs	.+2      	; 0x1222 <__udivmodqi4_ep>
    1220:	96 1b       	sub	r25, r22

00001222 <__udivmodqi4_ep>:
    1222:	88 1f       	adc	r24, r24
    1224:	7a 95       	dec	r23
    1226:	c9 f7       	brne	.-14     	; 0x121a <__udivmodqi4_loop>
    1228:	80 95       	com	r24
    122a:	08 95       	ret

0000122c <__tablejump2__>:
    122c:	ee 0f       	add	r30, r30
    122e:	ff 1f       	adc	r31, r31
    1230:	05 90       	lpm	r0, Z+
    1232:	f4 91       	lpm	r31, Z
    1234:	e0 2d       	mov	r30, r0
    1236:	09 94       	ijmp

00001238 <sprintf>:
    1238:	ae e0       	ldi	r26, 0x0E	; 14
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e2 e2       	ldi	r30, 0x22	; 34
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__prologue_saves__+0x1c>
    1244:	0d 89       	ldd	r16, Y+21	; 0x15
    1246:	1e 89       	ldd	r17, Y+22	; 0x16
    1248:	86 e0       	ldi	r24, 0x06	; 6
    124a:	8c 83       	std	Y+4, r24	; 0x04
    124c:	1a 83       	std	Y+2, r17	; 0x02
    124e:	09 83       	std	Y+1, r16	; 0x01
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	9f e7       	ldi	r25, 0x7F	; 127
    1254:	9e 83       	std	Y+6, r25	; 0x06
    1256:	8d 83       	std	Y+5, r24	; 0x05
    1258:	ae 01       	movw	r20, r28
    125a:	47 5e       	subi	r20, 0xE7	; 231
    125c:	5f 4f       	sbci	r21, 0xFF	; 255
    125e:	6f 89       	ldd	r22, Y+23	; 0x17
    1260:	78 8d       	ldd	r23, Y+24	; 0x18
    1262:	ce 01       	movw	r24, r28
    1264:	01 96       	adiw	r24, 0x01	; 1
    1266:	0e 94 3e 09 	call	0x127c	; 0x127c <vfprintf>
    126a:	ef 81       	ldd	r30, Y+7	; 0x07
    126c:	f8 85       	ldd	r31, Y+8	; 0x08
    126e:	e0 0f       	add	r30, r16
    1270:	f1 1f       	adc	r31, r17
    1272:	10 82       	st	Z, r1
    1274:	2e 96       	adiw	r28, 0x0e	; 14
    1276:	e4 e0       	ldi	r30, 0x04	; 4
    1278:	0c 94 f9 0b 	jmp	0x17f2	; 0x17f2 <__epilogue_restores__+0x1c>

0000127c <vfprintf>:
    127c:	ab e0       	ldi	r26, 0x0B	; 11
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	e4 e4       	ldi	r30, 0x44	; 68
    1282:	f9 e0       	ldi	r31, 0x09	; 9
    1284:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <__prologue_saves__>
    1288:	6c 01       	movw	r12, r24
    128a:	7b 01       	movw	r14, r22
    128c:	8a 01       	movw	r16, r20
    128e:	fc 01       	movw	r30, r24
    1290:	17 82       	std	Z+7, r1	; 0x07
    1292:	16 82       	std	Z+6, r1	; 0x06
    1294:	83 81       	ldd	r24, Z+3	; 0x03
    1296:	81 ff       	sbrs	r24, 1
    1298:	cc c1       	rjmp	.+920    	; 0x1632 <vfprintf+0x3b6>
    129a:	ce 01       	movw	r24, r28
    129c:	01 96       	adiw	r24, 0x01	; 1
    129e:	3c 01       	movw	r6, r24
    12a0:	f6 01       	movw	r30, r12
    12a2:	93 81       	ldd	r25, Z+3	; 0x03
    12a4:	f7 01       	movw	r30, r14
    12a6:	93 fd       	sbrc	r25, 3
    12a8:	85 91       	lpm	r24, Z+
    12aa:	93 ff       	sbrs	r25, 3
    12ac:	81 91       	ld	r24, Z+
    12ae:	7f 01       	movw	r14, r30
    12b0:	88 23       	and	r24, r24
    12b2:	09 f4       	brne	.+2      	; 0x12b6 <vfprintf+0x3a>
    12b4:	ba c1       	rjmp	.+884    	; 0x162a <vfprintf+0x3ae>
    12b6:	85 32       	cpi	r24, 0x25	; 37
    12b8:	39 f4       	brne	.+14     	; 0x12c8 <vfprintf+0x4c>
    12ba:	93 fd       	sbrc	r25, 3
    12bc:	85 91       	lpm	r24, Z+
    12be:	93 ff       	sbrs	r25, 3
    12c0:	81 91       	ld	r24, Z+
    12c2:	7f 01       	movw	r14, r30
    12c4:	85 32       	cpi	r24, 0x25	; 37
    12c6:	29 f4       	brne	.+10     	; 0x12d2 <vfprintf+0x56>
    12c8:	b6 01       	movw	r22, r12
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    12d0:	e7 cf       	rjmp	.-50     	; 0x12a0 <vfprintf+0x24>
    12d2:	91 2c       	mov	r9, r1
    12d4:	21 2c       	mov	r2, r1
    12d6:	31 2c       	mov	r3, r1
    12d8:	ff e1       	ldi	r31, 0x1F	; 31
    12da:	f3 15       	cp	r31, r3
    12dc:	d8 f0       	brcs	.+54     	; 0x1314 <vfprintf+0x98>
    12de:	8b 32       	cpi	r24, 0x2B	; 43
    12e0:	79 f0       	breq	.+30     	; 0x1300 <vfprintf+0x84>
    12e2:	38 f4       	brcc	.+14     	; 0x12f2 <vfprintf+0x76>
    12e4:	80 32       	cpi	r24, 0x20	; 32
    12e6:	79 f0       	breq	.+30     	; 0x1306 <vfprintf+0x8a>
    12e8:	83 32       	cpi	r24, 0x23	; 35
    12ea:	a1 f4       	brne	.+40     	; 0x1314 <vfprintf+0x98>
    12ec:	23 2d       	mov	r18, r3
    12ee:	20 61       	ori	r18, 0x10	; 16
    12f0:	1d c0       	rjmp	.+58     	; 0x132c <vfprintf+0xb0>
    12f2:	8d 32       	cpi	r24, 0x2D	; 45
    12f4:	61 f0       	breq	.+24     	; 0x130e <vfprintf+0x92>
    12f6:	80 33       	cpi	r24, 0x30	; 48
    12f8:	69 f4       	brne	.+26     	; 0x1314 <vfprintf+0x98>
    12fa:	23 2d       	mov	r18, r3
    12fc:	21 60       	ori	r18, 0x01	; 1
    12fe:	16 c0       	rjmp	.+44     	; 0x132c <vfprintf+0xb0>
    1300:	83 2d       	mov	r24, r3
    1302:	82 60       	ori	r24, 0x02	; 2
    1304:	38 2e       	mov	r3, r24
    1306:	e3 2d       	mov	r30, r3
    1308:	e4 60       	ori	r30, 0x04	; 4
    130a:	3e 2e       	mov	r3, r30
    130c:	2a c0       	rjmp	.+84     	; 0x1362 <vfprintf+0xe6>
    130e:	f3 2d       	mov	r31, r3
    1310:	f8 60       	ori	r31, 0x08	; 8
    1312:	1d c0       	rjmp	.+58     	; 0x134e <vfprintf+0xd2>
    1314:	37 fc       	sbrc	r3, 7
    1316:	2d c0       	rjmp	.+90     	; 0x1372 <vfprintf+0xf6>
    1318:	20 ed       	ldi	r18, 0xD0	; 208
    131a:	28 0f       	add	r18, r24
    131c:	2a 30       	cpi	r18, 0x0A	; 10
    131e:	40 f0       	brcs	.+16     	; 0x1330 <vfprintf+0xb4>
    1320:	8e 32       	cpi	r24, 0x2E	; 46
    1322:	b9 f4       	brne	.+46     	; 0x1352 <vfprintf+0xd6>
    1324:	36 fc       	sbrc	r3, 6
    1326:	81 c1       	rjmp	.+770    	; 0x162a <vfprintf+0x3ae>
    1328:	23 2d       	mov	r18, r3
    132a:	20 64       	ori	r18, 0x40	; 64
    132c:	32 2e       	mov	r3, r18
    132e:	19 c0       	rjmp	.+50     	; 0x1362 <vfprintf+0xe6>
    1330:	36 fe       	sbrs	r3, 6
    1332:	06 c0       	rjmp	.+12     	; 0x1340 <vfprintf+0xc4>
    1334:	8a e0       	ldi	r24, 0x0A	; 10
    1336:	98 9e       	mul	r9, r24
    1338:	20 0d       	add	r18, r0
    133a:	11 24       	eor	r1, r1
    133c:	92 2e       	mov	r9, r18
    133e:	11 c0       	rjmp	.+34     	; 0x1362 <vfprintf+0xe6>
    1340:	ea e0       	ldi	r30, 0x0A	; 10
    1342:	2e 9e       	mul	r2, r30
    1344:	20 0d       	add	r18, r0
    1346:	11 24       	eor	r1, r1
    1348:	22 2e       	mov	r2, r18
    134a:	f3 2d       	mov	r31, r3
    134c:	f0 62       	ori	r31, 0x20	; 32
    134e:	3f 2e       	mov	r3, r31
    1350:	08 c0       	rjmp	.+16     	; 0x1362 <vfprintf+0xe6>
    1352:	8c 36       	cpi	r24, 0x6C	; 108
    1354:	21 f4       	brne	.+8      	; 0x135e <vfprintf+0xe2>
    1356:	83 2d       	mov	r24, r3
    1358:	80 68       	ori	r24, 0x80	; 128
    135a:	38 2e       	mov	r3, r24
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <vfprintf+0xe6>
    135e:	88 36       	cpi	r24, 0x68	; 104
    1360:	41 f4       	brne	.+16     	; 0x1372 <vfprintf+0xf6>
    1362:	f7 01       	movw	r30, r14
    1364:	93 fd       	sbrc	r25, 3
    1366:	85 91       	lpm	r24, Z+
    1368:	93 ff       	sbrs	r25, 3
    136a:	81 91       	ld	r24, Z+
    136c:	7f 01       	movw	r14, r30
    136e:	81 11       	cpse	r24, r1
    1370:	b3 cf       	rjmp	.-154    	; 0x12d8 <vfprintf+0x5c>
    1372:	98 2f       	mov	r25, r24
    1374:	9f 7d       	andi	r25, 0xDF	; 223
    1376:	95 54       	subi	r25, 0x45	; 69
    1378:	93 30       	cpi	r25, 0x03	; 3
    137a:	28 f4       	brcc	.+10     	; 0x1386 <vfprintf+0x10a>
    137c:	0c 5f       	subi	r16, 0xFC	; 252
    137e:	1f 4f       	sbci	r17, 0xFF	; 255
    1380:	9f e3       	ldi	r25, 0x3F	; 63
    1382:	99 83       	std	Y+1, r25	; 0x01
    1384:	0d c0       	rjmp	.+26     	; 0x13a0 <vfprintf+0x124>
    1386:	83 36       	cpi	r24, 0x63	; 99
    1388:	31 f0       	breq	.+12     	; 0x1396 <vfprintf+0x11a>
    138a:	83 37       	cpi	r24, 0x73	; 115
    138c:	71 f0       	breq	.+28     	; 0x13aa <vfprintf+0x12e>
    138e:	83 35       	cpi	r24, 0x53	; 83
    1390:	09 f0       	breq	.+2      	; 0x1394 <vfprintf+0x118>
    1392:	59 c0       	rjmp	.+178    	; 0x1446 <vfprintf+0x1ca>
    1394:	21 c0       	rjmp	.+66     	; 0x13d8 <vfprintf+0x15c>
    1396:	f8 01       	movw	r30, r16
    1398:	80 81       	ld	r24, Z
    139a:	89 83       	std	Y+1, r24	; 0x01
    139c:	0e 5f       	subi	r16, 0xFE	; 254
    139e:	1f 4f       	sbci	r17, 0xFF	; 255
    13a0:	88 24       	eor	r8, r8
    13a2:	83 94       	inc	r8
    13a4:	91 2c       	mov	r9, r1
    13a6:	53 01       	movw	r10, r6
    13a8:	13 c0       	rjmp	.+38     	; 0x13d0 <vfprintf+0x154>
    13aa:	28 01       	movw	r4, r16
    13ac:	f2 e0       	ldi	r31, 0x02	; 2
    13ae:	4f 0e       	add	r4, r31
    13b0:	51 1c       	adc	r5, r1
    13b2:	f8 01       	movw	r30, r16
    13b4:	a0 80       	ld	r10, Z
    13b6:	b1 80       	ldd	r11, Z+1	; 0x01
    13b8:	36 fe       	sbrs	r3, 6
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <vfprintf+0x146>
    13bc:	69 2d       	mov	r22, r9
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <vfprintf+0x14a>
    13c2:	6f ef       	ldi	r22, 0xFF	; 255
    13c4:	7f ef       	ldi	r23, 0xFF	; 255
    13c6:	c5 01       	movw	r24, r10
    13c8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <strnlen>
    13cc:	4c 01       	movw	r8, r24
    13ce:	82 01       	movw	r16, r4
    13d0:	f3 2d       	mov	r31, r3
    13d2:	ff 77       	andi	r31, 0x7F	; 127
    13d4:	3f 2e       	mov	r3, r31
    13d6:	16 c0       	rjmp	.+44     	; 0x1404 <vfprintf+0x188>
    13d8:	28 01       	movw	r4, r16
    13da:	22 e0       	ldi	r18, 0x02	; 2
    13dc:	42 0e       	add	r4, r18
    13de:	51 1c       	adc	r5, r1
    13e0:	f8 01       	movw	r30, r16
    13e2:	a0 80       	ld	r10, Z
    13e4:	b1 80       	ldd	r11, Z+1	; 0x01
    13e6:	36 fe       	sbrs	r3, 6
    13e8:	03 c0       	rjmp	.+6      	; 0x13f0 <vfprintf+0x174>
    13ea:	69 2d       	mov	r22, r9
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	02 c0       	rjmp	.+4      	; 0x13f4 <vfprintf+0x178>
    13f0:	6f ef       	ldi	r22, 0xFF	; 255
    13f2:	7f ef       	ldi	r23, 0xFF	; 255
    13f4:	c5 01       	movw	r24, r10
    13f6:	0e 94 1f 0b 	call	0x163e	; 0x163e <strnlen_P>
    13fa:	4c 01       	movw	r8, r24
    13fc:	f3 2d       	mov	r31, r3
    13fe:	f0 68       	ori	r31, 0x80	; 128
    1400:	3f 2e       	mov	r3, r31
    1402:	82 01       	movw	r16, r4
    1404:	33 fc       	sbrc	r3, 3
    1406:	1b c0       	rjmp	.+54     	; 0x143e <vfprintf+0x1c2>
    1408:	82 2d       	mov	r24, r2
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	88 16       	cp	r8, r24
    140e:	99 06       	cpc	r9, r25
    1410:	b0 f4       	brcc	.+44     	; 0x143e <vfprintf+0x1c2>
    1412:	b6 01       	movw	r22, r12
    1414:	80 e2       	ldi	r24, 0x20	; 32
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    141c:	2a 94       	dec	r2
    141e:	f4 cf       	rjmp	.-24     	; 0x1408 <vfprintf+0x18c>
    1420:	f5 01       	movw	r30, r10
    1422:	37 fc       	sbrc	r3, 7
    1424:	85 91       	lpm	r24, Z+
    1426:	37 fe       	sbrs	r3, 7
    1428:	81 91       	ld	r24, Z+
    142a:	5f 01       	movw	r10, r30
    142c:	b6 01       	movw	r22, r12
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    1434:	21 10       	cpse	r2, r1
    1436:	2a 94       	dec	r2
    1438:	21 e0       	ldi	r18, 0x01	; 1
    143a:	82 1a       	sub	r8, r18
    143c:	91 08       	sbc	r9, r1
    143e:	81 14       	cp	r8, r1
    1440:	91 04       	cpc	r9, r1
    1442:	71 f7       	brne	.-36     	; 0x1420 <vfprintf+0x1a4>
    1444:	e8 c0       	rjmp	.+464    	; 0x1616 <vfprintf+0x39a>
    1446:	84 36       	cpi	r24, 0x64	; 100
    1448:	11 f0       	breq	.+4      	; 0x144e <vfprintf+0x1d2>
    144a:	89 36       	cpi	r24, 0x69	; 105
    144c:	41 f5       	brne	.+80     	; 0x149e <vfprintf+0x222>
    144e:	f8 01       	movw	r30, r16
    1450:	37 fe       	sbrs	r3, 7
    1452:	07 c0       	rjmp	.+14     	; 0x1462 <vfprintf+0x1e6>
    1454:	60 81       	ld	r22, Z
    1456:	71 81       	ldd	r23, Z+1	; 0x01
    1458:	82 81       	ldd	r24, Z+2	; 0x02
    145a:	93 81       	ldd	r25, Z+3	; 0x03
    145c:	0c 5f       	subi	r16, 0xFC	; 252
    145e:	1f 4f       	sbci	r17, 0xFF	; 255
    1460:	08 c0       	rjmp	.+16     	; 0x1472 <vfprintf+0x1f6>
    1462:	60 81       	ld	r22, Z
    1464:	71 81       	ldd	r23, Z+1	; 0x01
    1466:	07 2e       	mov	r0, r23
    1468:	00 0c       	add	r0, r0
    146a:	88 0b       	sbc	r24, r24
    146c:	99 0b       	sbc	r25, r25
    146e:	0e 5f       	subi	r16, 0xFE	; 254
    1470:	1f 4f       	sbci	r17, 0xFF	; 255
    1472:	f3 2d       	mov	r31, r3
    1474:	ff 76       	andi	r31, 0x6F	; 111
    1476:	3f 2e       	mov	r3, r31
    1478:	97 ff       	sbrs	r25, 7
    147a:	09 c0       	rjmp	.+18     	; 0x148e <vfprintf+0x212>
    147c:	90 95       	com	r25
    147e:	80 95       	com	r24
    1480:	70 95       	com	r23
    1482:	61 95       	neg	r22
    1484:	7f 4f       	sbci	r23, 0xFF	; 255
    1486:	8f 4f       	sbci	r24, 0xFF	; 255
    1488:	9f 4f       	sbci	r25, 0xFF	; 255
    148a:	f0 68       	ori	r31, 0x80	; 128
    148c:	3f 2e       	mov	r3, r31
    148e:	2a e0       	ldi	r18, 0x0A	; 10
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	a3 01       	movw	r20, r6
    1494:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <__ultoa_invert>
    1498:	88 2e       	mov	r8, r24
    149a:	86 18       	sub	r8, r6
    149c:	45 c0       	rjmp	.+138    	; 0x1528 <vfprintf+0x2ac>
    149e:	85 37       	cpi	r24, 0x75	; 117
    14a0:	31 f4       	brne	.+12     	; 0x14ae <vfprintf+0x232>
    14a2:	23 2d       	mov	r18, r3
    14a4:	2f 7e       	andi	r18, 0xEF	; 239
    14a6:	b2 2e       	mov	r11, r18
    14a8:	2a e0       	ldi	r18, 0x0A	; 10
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	25 c0       	rjmp	.+74     	; 0x14f8 <vfprintf+0x27c>
    14ae:	93 2d       	mov	r25, r3
    14b0:	99 7f       	andi	r25, 0xF9	; 249
    14b2:	b9 2e       	mov	r11, r25
    14b4:	8f 36       	cpi	r24, 0x6F	; 111
    14b6:	c1 f0       	breq	.+48     	; 0x14e8 <vfprintf+0x26c>
    14b8:	18 f4       	brcc	.+6      	; 0x14c0 <vfprintf+0x244>
    14ba:	88 35       	cpi	r24, 0x58	; 88
    14bc:	79 f0       	breq	.+30     	; 0x14dc <vfprintf+0x260>
    14be:	b5 c0       	rjmp	.+362    	; 0x162a <vfprintf+0x3ae>
    14c0:	80 37       	cpi	r24, 0x70	; 112
    14c2:	19 f0       	breq	.+6      	; 0x14ca <vfprintf+0x24e>
    14c4:	88 37       	cpi	r24, 0x78	; 120
    14c6:	21 f0       	breq	.+8      	; 0x14d0 <vfprintf+0x254>
    14c8:	b0 c0       	rjmp	.+352    	; 0x162a <vfprintf+0x3ae>
    14ca:	e9 2f       	mov	r30, r25
    14cc:	e0 61       	ori	r30, 0x10	; 16
    14ce:	be 2e       	mov	r11, r30
    14d0:	b4 fe       	sbrs	r11, 4
    14d2:	0d c0       	rjmp	.+26     	; 0x14ee <vfprintf+0x272>
    14d4:	fb 2d       	mov	r31, r11
    14d6:	f4 60       	ori	r31, 0x04	; 4
    14d8:	bf 2e       	mov	r11, r31
    14da:	09 c0       	rjmp	.+18     	; 0x14ee <vfprintf+0x272>
    14dc:	34 fe       	sbrs	r3, 4
    14de:	0a c0       	rjmp	.+20     	; 0x14f4 <vfprintf+0x278>
    14e0:	29 2f       	mov	r18, r25
    14e2:	26 60       	ori	r18, 0x06	; 6
    14e4:	b2 2e       	mov	r11, r18
    14e6:	06 c0       	rjmp	.+12     	; 0x14f4 <vfprintf+0x278>
    14e8:	28 e0       	ldi	r18, 0x08	; 8
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	05 c0       	rjmp	.+10     	; 0x14f8 <vfprintf+0x27c>
    14ee:	20 e1       	ldi	r18, 0x10	; 16
    14f0:	30 e0       	ldi	r19, 0x00	; 0
    14f2:	02 c0       	rjmp	.+4      	; 0x14f8 <vfprintf+0x27c>
    14f4:	20 e1       	ldi	r18, 0x10	; 16
    14f6:	32 e0       	ldi	r19, 0x02	; 2
    14f8:	f8 01       	movw	r30, r16
    14fa:	b7 fe       	sbrs	r11, 7
    14fc:	07 c0       	rjmp	.+14     	; 0x150c <vfprintf+0x290>
    14fe:	60 81       	ld	r22, Z
    1500:	71 81       	ldd	r23, Z+1	; 0x01
    1502:	82 81       	ldd	r24, Z+2	; 0x02
    1504:	93 81       	ldd	r25, Z+3	; 0x03
    1506:	0c 5f       	subi	r16, 0xFC	; 252
    1508:	1f 4f       	sbci	r17, 0xFF	; 255
    150a:	06 c0       	rjmp	.+12     	; 0x1518 <vfprintf+0x29c>
    150c:	60 81       	ld	r22, Z
    150e:	71 81       	ldd	r23, Z+1	; 0x01
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	0e 5f       	subi	r16, 0xFE	; 254
    1516:	1f 4f       	sbci	r17, 0xFF	; 255
    1518:	a3 01       	movw	r20, r6
    151a:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <__ultoa_invert>
    151e:	88 2e       	mov	r8, r24
    1520:	86 18       	sub	r8, r6
    1522:	fb 2d       	mov	r31, r11
    1524:	ff 77       	andi	r31, 0x7F	; 127
    1526:	3f 2e       	mov	r3, r31
    1528:	36 fe       	sbrs	r3, 6
    152a:	0d c0       	rjmp	.+26     	; 0x1546 <vfprintf+0x2ca>
    152c:	23 2d       	mov	r18, r3
    152e:	2e 7f       	andi	r18, 0xFE	; 254
    1530:	a2 2e       	mov	r10, r18
    1532:	89 14       	cp	r8, r9
    1534:	58 f4       	brcc	.+22     	; 0x154c <vfprintf+0x2d0>
    1536:	34 fe       	sbrs	r3, 4
    1538:	0b c0       	rjmp	.+22     	; 0x1550 <vfprintf+0x2d4>
    153a:	32 fc       	sbrc	r3, 2
    153c:	09 c0       	rjmp	.+18     	; 0x1550 <vfprintf+0x2d4>
    153e:	83 2d       	mov	r24, r3
    1540:	8e 7e       	andi	r24, 0xEE	; 238
    1542:	a8 2e       	mov	r10, r24
    1544:	05 c0       	rjmp	.+10     	; 0x1550 <vfprintf+0x2d4>
    1546:	b8 2c       	mov	r11, r8
    1548:	a3 2c       	mov	r10, r3
    154a:	03 c0       	rjmp	.+6      	; 0x1552 <vfprintf+0x2d6>
    154c:	b8 2c       	mov	r11, r8
    154e:	01 c0       	rjmp	.+2      	; 0x1552 <vfprintf+0x2d6>
    1550:	b9 2c       	mov	r11, r9
    1552:	a4 fe       	sbrs	r10, 4
    1554:	0f c0       	rjmp	.+30     	; 0x1574 <vfprintf+0x2f8>
    1556:	fe 01       	movw	r30, r28
    1558:	e8 0d       	add	r30, r8
    155a:	f1 1d       	adc	r31, r1
    155c:	80 81       	ld	r24, Z
    155e:	80 33       	cpi	r24, 0x30	; 48
    1560:	21 f4       	brne	.+8      	; 0x156a <vfprintf+0x2ee>
    1562:	9a 2d       	mov	r25, r10
    1564:	99 7e       	andi	r25, 0xE9	; 233
    1566:	a9 2e       	mov	r10, r25
    1568:	09 c0       	rjmp	.+18     	; 0x157c <vfprintf+0x300>
    156a:	a2 fe       	sbrs	r10, 2
    156c:	06 c0       	rjmp	.+12     	; 0x157a <vfprintf+0x2fe>
    156e:	b3 94       	inc	r11
    1570:	b3 94       	inc	r11
    1572:	04 c0       	rjmp	.+8      	; 0x157c <vfprintf+0x300>
    1574:	8a 2d       	mov	r24, r10
    1576:	86 78       	andi	r24, 0x86	; 134
    1578:	09 f0       	breq	.+2      	; 0x157c <vfprintf+0x300>
    157a:	b3 94       	inc	r11
    157c:	a3 fc       	sbrc	r10, 3
    157e:	11 c0       	rjmp	.+34     	; 0x15a2 <vfprintf+0x326>
    1580:	a0 fe       	sbrs	r10, 0
    1582:	06 c0       	rjmp	.+12     	; 0x1590 <vfprintf+0x314>
    1584:	b2 14       	cp	r11, r2
    1586:	88 f4       	brcc	.+34     	; 0x15aa <vfprintf+0x32e>
    1588:	28 0c       	add	r2, r8
    158a:	92 2c       	mov	r9, r2
    158c:	9b 18       	sub	r9, r11
    158e:	0e c0       	rjmp	.+28     	; 0x15ac <vfprintf+0x330>
    1590:	b2 14       	cp	r11, r2
    1592:	60 f4       	brcc	.+24     	; 0x15ac <vfprintf+0x330>
    1594:	b6 01       	movw	r22, r12
    1596:	80 e2       	ldi	r24, 0x20	; 32
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    159e:	b3 94       	inc	r11
    15a0:	f7 cf       	rjmp	.-18     	; 0x1590 <vfprintf+0x314>
    15a2:	b2 14       	cp	r11, r2
    15a4:	18 f4       	brcc	.+6      	; 0x15ac <vfprintf+0x330>
    15a6:	2b 18       	sub	r2, r11
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <vfprintf+0x332>
    15aa:	98 2c       	mov	r9, r8
    15ac:	21 2c       	mov	r2, r1
    15ae:	a4 fe       	sbrs	r10, 4
    15b0:	10 c0       	rjmp	.+32     	; 0x15d2 <vfprintf+0x356>
    15b2:	b6 01       	movw	r22, r12
    15b4:	80 e3       	ldi	r24, 0x30	; 48
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    15bc:	a2 fe       	sbrs	r10, 2
    15be:	17 c0       	rjmp	.+46     	; 0x15ee <vfprintf+0x372>
    15c0:	a1 fc       	sbrc	r10, 1
    15c2:	03 c0       	rjmp	.+6      	; 0x15ca <vfprintf+0x34e>
    15c4:	88 e7       	ldi	r24, 0x78	; 120
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <vfprintf+0x352>
    15ca:	88 e5       	ldi	r24, 0x58	; 88
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	b6 01       	movw	r22, r12
    15d0:	0c c0       	rjmp	.+24     	; 0x15ea <vfprintf+0x36e>
    15d2:	8a 2d       	mov	r24, r10
    15d4:	86 78       	andi	r24, 0x86	; 134
    15d6:	59 f0       	breq	.+22     	; 0x15ee <vfprintf+0x372>
    15d8:	a1 fe       	sbrs	r10, 1
    15da:	02 c0       	rjmp	.+4      	; 0x15e0 <vfprintf+0x364>
    15dc:	8b e2       	ldi	r24, 0x2B	; 43
    15de:	01 c0       	rjmp	.+2      	; 0x15e2 <vfprintf+0x366>
    15e0:	80 e2       	ldi	r24, 0x20	; 32
    15e2:	a7 fc       	sbrc	r10, 7
    15e4:	8d e2       	ldi	r24, 0x2D	; 45
    15e6:	b6 01       	movw	r22, r12
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    15ee:	89 14       	cp	r8, r9
    15f0:	38 f4       	brcc	.+14     	; 0x1600 <vfprintf+0x384>
    15f2:	b6 01       	movw	r22, r12
    15f4:	80 e3       	ldi	r24, 0x30	; 48
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    15fc:	9a 94       	dec	r9
    15fe:	f7 cf       	rjmp	.-18     	; 0x15ee <vfprintf+0x372>
    1600:	8a 94       	dec	r8
    1602:	f3 01       	movw	r30, r6
    1604:	e8 0d       	add	r30, r8
    1606:	f1 1d       	adc	r31, r1
    1608:	80 81       	ld	r24, Z
    160a:	b6 01       	movw	r22, r12
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    1612:	81 10       	cpse	r8, r1
    1614:	f5 cf       	rjmp	.-22     	; 0x1600 <vfprintf+0x384>
    1616:	22 20       	and	r2, r2
    1618:	09 f4       	brne	.+2      	; 0x161c <vfprintf+0x3a0>
    161a:	42 ce       	rjmp	.-892    	; 0x12a0 <vfprintf+0x24>
    161c:	b6 01       	movw	r22, r12
    161e:	80 e2       	ldi	r24, 0x20	; 32
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 35 0b 	call	0x166a	; 0x166a <fputc>
    1626:	2a 94       	dec	r2
    1628:	f6 cf       	rjmp	.-20     	; 0x1616 <vfprintf+0x39a>
    162a:	f6 01       	movw	r30, r12
    162c:	86 81       	ldd	r24, Z+6	; 0x06
    162e:	97 81       	ldd	r25, Z+7	; 0x07
    1630:	02 c0       	rjmp	.+4      	; 0x1636 <vfprintf+0x3ba>
    1632:	8f ef       	ldi	r24, 0xFF	; 255
    1634:	9f ef       	ldi	r25, 0xFF	; 255
    1636:	2b 96       	adiw	r28, 0x0b	; 11
    1638:	e2 e1       	ldi	r30, 0x12	; 18
    163a:	0c 94 eb 0b 	jmp	0x17d6	; 0x17d6 <__epilogue_restores__>

0000163e <strnlen_P>:
    163e:	fc 01       	movw	r30, r24
    1640:	05 90       	lpm	r0, Z+
    1642:	61 50       	subi	r22, 0x01	; 1
    1644:	70 40       	sbci	r23, 0x00	; 0
    1646:	01 10       	cpse	r0, r1
    1648:	d8 f7       	brcc	.-10     	; 0x1640 <strnlen_P+0x2>
    164a:	80 95       	com	r24
    164c:	90 95       	com	r25
    164e:	8e 0f       	add	r24, r30
    1650:	9f 1f       	adc	r25, r31
    1652:	08 95       	ret

00001654 <strnlen>:
    1654:	fc 01       	movw	r30, r24
    1656:	61 50       	subi	r22, 0x01	; 1
    1658:	70 40       	sbci	r23, 0x00	; 0
    165a:	01 90       	ld	r0, Z+
    165c:	01 10       	cpse	r0, r1
    165e:	d8 f7       	brcc	.-10     	; 0x1656 <strnlen+0x2>
    1660:	80 95       	com	r24
    1662:	90 95       	com	r25
    1664:	8e 0f       	add	r24, r30
    1666:	9f 1f       	adc	r25, r31
    1668:	08 95       	ret

0000166a <fputc>:
    166a:	0f 93       	push	r16
    166c:	1f 93       	push	r17
    166e:	cf 93       	push	r28
    1670:	df 93       	push	r29
    1672:	fb 01       	movw	r30, r22
    1674:	23 81       	ldd	r18, Z+3	; 0x03
    1676:	21 fd       	sbrc	r18, 1
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <fputc+0x16>
    167a:	8f ef       	ldi	r24, 0xFF	; 255
    167c:	9f ef       	ldi	r25, 0xFF	; 255
    167e:	2c c0       	rjmp	.+88     	; 0x16d8 <fputc+0x6e>
    1680:	22 ff       	sbrs	r18, 2
    1682:	16 c0       	rjmp	.+44     	; 0x16b0 <fputc+0x46>
    1684:	46 81       	ldd	r20, Z+6	; 0x06
    1686:	57 81       	ldd	r21, Z+7	; 0x07
    1688:	24 81       	ldd	r18, Z+4	; 0x04
    168a:	35 81       	ldd	r19, Z+5	; 0x05
    168c:	42 17       	cp	r20, r18
    168e:	53 07       	cpc	r21, r19
    1690:	44 f4       	brge	.+16     	; 0x16a2 <fputc+0x38>
    1692:	a0 81       	ld	r26, Z
    1694:	b1 81       	ldd	r27, Z+1	; 0x01
    1696:	9d 01       	movw	r18, r26
    1698:	2f 5f       	subi	r18, 0xFF	; 255
    169a:	3f 4f       	sbci	r19, 0xFF	; 255
    169c:	31 83       	std	Z+1, r19	; 0x01
    169e:	20 83       	st	Z, r18
    16a0:	8c 93       	st	X, r24
    16a2:	26 81       	ldd	r18, Z+6	; 0x06
    16a4:	37 81       	ldd	r19, Z+7	; 0x07
    16a6:	2f 5f       	subi	r18, 0xFF	; 255
    16a8:	3f 4f       	sbci	r19, 0xFF	; 255
    16aa:	37 83       	std	Z+7, r19	; 0x07
    16ac:	26 83       	std	Z+6, r18	; 0x06
    16ae:	14 c0       	rjmp	.+40     	; 0x16d8 <fputc+0x6e>
    16b0:	8b 01       	movw	r16, r22
    16b2:	ec 01       	movw	r28, r24
    16b4:	fb 01       	movw	r30, r22
    16b6:	00 84       	ldd	r0, Z+8	; 0x08
    16b8:	f1 85       	ldd	r31, Z+9	; 0x09
    16ba:	e0 2d       	mov	r30, r0
    16bc:	09 95       	icall
    16be:	89 2b       	or	r24, r25
    16c0:	e1 f6       	brne	.-72     	; 0x167a <fputc+0x10>
    16c2:	d8 01       	movw	r26, r16
    16c4:	16 96       	adiw	r26, 0x06	; 6
    16c6:	8d 91       	ld	r24, X+
    16c8:	9c 91       	ld	r25, X
    16ca:	17 97       	sbiw	r26, 0x07	; 7
    16cc:	01 96       	adiw	r24, 0x01	; 1
    16ce:	17 96       	adiw	r26, 0x07	; 7
    16d0:	9c 93       	st	X, r25
    16d2:	8e 93       	st	-X, r24
    16d4:	16 97       	sbiw	r26, 0x06	; 6
    16d6:	ce 01       	movw	r24, r28
    16d8:	df 91       	pop	r29
    16da:	cf 91       	pop	r28
    16dc:	1f 91       	pop	r17
    16de:	0f 91       	pop	r16
    16e0:	08 95       	ret

000016e2 <__ultoa_invert>:
    16e2:	fa 01       	movw	r30, r20
    16e4:	aa 27       	eor	r26, r26
    16e6:	28 30       	cpi	r18, 0x08	; 8
    16e8:	51 f1       	breq	.+84     	; 0x173e <__ultoa_invert+0x5c>
    16ea:	20 31       	cpi	r18, 0x10	; 16
    16ec:	81 f1       	breq	.+96     	; 0x174e <__ultoa_invert+0x6c>
    16ee:	e8 94       	clt
    16f0:	6f 93       	push	r22
    16f2:	6e 7f       	andi	r22, 0xFE	; 254
    16f4:	6e 5f       	subi	r22, 0xFE	; 254
    16f6:	7f 4f       	sbci	r23, 0xFF	; 255
    16f8:	8f 4f       	sbci	r24, 0xFF	; 255
    16fa:	9f 4f       	sbci	r25, 0xFF	; 255
    16fc:	af 4f       	sbci	r26, 0xFF	; 255
    16fe:	b1 e0       	ldi	r27, 0x01	; 1
    1700:	3e d0       	rcall	.+124    	; 0x177e <__ultoa_invert+0x9c>
    1702:	b4 e0       	ldi	r27, 0x04	; 4
    1704:	3c d0       	rcall	.+120    	; 0x177e <__ultoa_invert+0x9c>
    1706:	67 0f       	add	r22, r23
    1708:	78 1f       	adc	r23, r24
    170a:	89 1f       	adc	r24, r25
    170c:	9a 1f       	adc	r25, r26
    170e:	a1 1d       	adc	r26, r1
    1710:	68 0f       	add	r22, r24
    1712:	79 1f       	adc	r23, r25
    1714:	8a 1f       	adc	r24, r26
    1716:	91 1d       	adc	r25, r1
    1718:	a1 1d       	adc	r26, r1
    171a:	6a 0f       	add	r22, r26
    171c:	71 1d       	adc	r23, r1
    171e:	81 1d       	adc	r24, r1
    1720:	91 1d       	adc	r25, r1
    1722:	a1 1d       	adc	r26, r1
    1724:	20 d0       	rcall	.+64     	; 0x1766 <__ultoa_invert+0x84>
    1726:	09 f4       	brne	.+2      	; 0x172a <__ultoa_invert+0x48>
    1728:	68 94       	set
    172a:	3f 91       	pop	r19
    172c:	2a e0       	ldi	r18, 0x0A	; 10
    172e:	26 9f       	mul	r18, r22
    1730:	11 24       	eor	r1, r1
    1732:	30 19       	sub	r19, r0
    1734:	30 5d       	subi	r19, 0xD0	; 208
    1736:	31 93       	st	Z+, r19
    1738:	de f6       	brtc	.-74     	; 0x16f0 <__ultoa_invert+0xe>
    173a:	cf 01       	movw	r24, r30
    173c:	08 95       	ret
    173e:	46 2f       	mov	r20, r22
    1740:	47 70       	andi	r20, 0x07	; 7
    1742:	40 5d       	subi	r20, 0xD0	; 208
    1744:	41 93       	st	Z+, r20
    1746:	b3 e0       	ldi	r27, 0x03	; 3
    1748:	0f d0       	rcall	.+30     	; 0x1768 <__ultoa_invert+0x86>
    174a:	c9 f7       	brne	.-14     	; 0x173e <__ultoa_invert+0x5c>
    174c:	f6 cf       	rjmp	.-20     	; 0x173a <__ultoa_invert+0x58>
    174e:	46 2f       	mov	r20, r22
    1750:	4f 70       	andi	r20, 0x0F	; 15
    1752:	40 5d       	subi	r20, 0xD0	; 208
    1754:	4a 33       	cpi	r20, 0x3A	; 58
    1756:	18 f0       	brcs	.+6      	; 0x175e <__ultoa_invert+0x7c>
    1758:	49 5d       	subi	r20, 0xD9	; 217
    175a:	31 fd       	sbrc	r19, 1
    175c:	40 52       	subi	r20, 0x20	; 32
    175e:	41 93       	st	Z+, r20
    1760:	02 d0       	rcall	.+4      	; 0x1766 <__ultoa_invert+0x84>
    1762:	a9 f7       	brne	.-22     	; 0x174e <__ultoa_invert+0x6c>
    1764:	ea cf       	rjmp	.-44     	; 0x173a <__ultoa_invert+0x58>
    1766:	b4 e0       	ldi	r27, 0x04	; 4
    1768:	a6 95       	lsr	r26
    176a:	97 95       	ror	r25
    176c:	87 95       	ror	r24
    176e:	77 95       	ror	r23
    1770:	67 95       	ror	r22
    1772:	ba 95       	dec	r27
    1774:	c9 f7       	brne	.-14     	; 0x1768 <__ultoa_invert+0x86>
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	61 05       	cpc	r22, r1
    177a:	71 05       	cpc	r23, r1
    177c:	08 95       	ret
    177e:	9b 01       	movw	r18, r22
    1780:	ac 01       	movw	r20, r24
    1782:	0a 2e       	mov	r0, r26
    1784:	06 94       	lsr	r0
    1786:	57 95       	ror	r21
    1788:	47 95       	ror	r20
    178a:	37 95       	ror	r19
    178c:	27 95       	ror	r18
    178e:	ba 95       	dec	r27
    1790:	c9 f7       	brne	.-14     	; 0x1784 <__ultoa_invert+0xa2>
    1792:	62 0f       	add	r22, r18
    1794:	73 1f       	adc	r23, r19
    1796:	84 1f       	adc	r24, r20
    1798:	95 1f       	adc	r25, r21
    179a:	a0 1d       	adc	r26, r0
    179c:	08 95       	ret

0000179e <__prologue_saves__>:
    179e:	2f 92       	push	r2
    17a0:	3f 92       	push	r3
    17a2:	4f 92       	push	r4
    17a4:	5f 92       	push	r5
    17a6:	6f 92       	push	r6
    17a8:	7f 92       	push	r7
    17aa:	8f 92       	push	r8
    17ac:	9f 92       	push	r9
    17ae:	af 92       	push	r10
    17b0:	bf 92       	push	r11
    17b2:	cf 92       	push	r12
    17b4:	df 92       	push	r13
    17b6:	ef 92       	push	r14
    17b8:	ff 92       	push	r15
    17ba:	0f 93       	push	r16
    17bc:	1f 93       	push	r17
    17be:	cf 93       	push	r28
    17c0:	df 93       	push	r29
    17c2:	cd b7       	in	r28, 0x3d	; 61
    17c4:	de b7       	in	r29, 0x3e	; 62
    17c6:	ca 1b       	sub	r28, r26
    17c8:	db 0b       	sbc	r29, r27
    17ca:	0f b6       	in	r0, 0x3f	; 63
    17cc:	f8 94       	cli
    17ce:	de bf       	out	0x3e, r29	; 62
    17d0:	0f be       	out	0x3f, r0	; 63
    17d2:	cd bf       	out	0x3d, r28	; 61
    17d4:	09 94       	ijmp

000017d6 <__epilogue_restores__>:
    17d6:	2a 88       	ldd	r2, Y+18	; 0x12
    17d8:	39 88       	ldd	r3, Y+17	; 0x11
    17da:	48 88       	ldd	r4, Y+16	; 0x10
    17dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    17de:	6e 84       	ldd	r6, Y+14	; 0x0e
    17e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    17e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    17e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    17e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    17e8:	b9 84       	ldd	r11, Y+9	; 0x09
    17ea:	c8 84       	ldd	r12, Y+8	; 0x08
    17ec:	df 80       	ldd	r13, Y+7	; 0x07
    17ee:	ee 80       	ldd	r14, Y+6	; 0x06
    17f0:	fd 80       	ldd	r15, Y+5	; 0x05
    17f2:	0c 81       	ldd	r16, Y+4	; 0x04
    17f4:	1b 81       	ldd	r17, Y+3	; 0x03
    17f6:	aa 81       	ldd	r26, Y+2	; 0x02
    17f8:	b9 81       	ldd	r27, Y+1	; 0x01
    17fa:	ce 0f       	add	r28, r30
    17fc:	d1 1d       	adc	r29, r1
    17fe:	0f b6       	in	r0, 0x3f	; 63
    1800:	f8 94       	cli
    1802:	de bf       	out	0x3e, r29	; 62
    1804:	0f be       	out	0x3f, r0	; 63
    1806:	cd bf       	out	0x3d, r28	; 61
    1808:	ed 01       	movw	r28, r26
    180a:	08 95       	ret

0000180c <_exit>:
    180c:	f8 94       	cli

0000180e <__stop_program>:
    180e:	ff cf       	rjmp	.-2      	; 0x180e <__stop_program>
